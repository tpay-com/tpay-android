plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'org.jetbrains.dokka'
    id 'signing'
    id 'kotlin-parcelize'
}

def _versionMajor = 1
def _versionMinor = 2
def _versionPatch = 2
def _versionName = "${_versionMajor}.${_versionMinor}.${_versionPatch}"
def _archiveName = "com.tpay.sdk-$_versionName"

android {
    namespace = "com.tpay.sdk"
    compileSdk rootProject.compileSdk

    defaultConfig {
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk
        setProperty("archivesBaseName", _archiveName)

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Android
    implementation "androidx.appcompat:appcompat:$appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout"
    implementation "androidx.recyclerview:recyclerview:$recyclerView"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtx"

    // Google Pay
    implementation "com.google.android.gms:play-services-wallet:$googlePay"

    //Inject
    implementation 'javax.inject:javax.inject:1'

    // Material
    implementation "com.google.android.material:material:$material"

    testImplementation "junit:junit:$jUnit"
    androidTestImplementation "androidx.test.ext:junit:$androidxJUnit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
}

dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
            includeNonPublic.set(false)
        }
    }
}

task generateDocumentation(type: Jar) {
    archiveClassifier = "javadoc"
    dependsOn(dokkaJavadoc)
    from(dokkaJavadoc.outputDirectory)
}

task sourcesJar(type: Jar) {
    archiveClassifier = "sources"
    from 'src/main/kotlin/com/tpay/sdk/api'
}

def isSigningRequired = !project.hasProperty("skipSigning")

afterEvaluate {
    signing {
        required { isSigningRequired }

        useInMemoryPgpKeys(
            System.getenv('SIGNING_KEY'),
            System.getenv('SIGNING_KEY_PASSWORD')
        )

        sign publishing.publications
    }
    publishing {
        repositories {
            maven {
                name 'MavenCentral'
                url System.getenv('MAVEN_URL')
                credentials {
                    username System.getenv('MAVEN_LOGIN')
                    password System.getenv('MAVEN_PASSWORD')
                }
            }

            maven {
                name 'Staging'
                url System.getenv('STAGING_MAVEN_URL')
                credentials {
                    username System.getenv('STAGING_MAVEN_LOGIN')
                    password System.getenv('STAGING_MAVEN_PASSWORD')
                }
            }
            maven {
                def gitlabProjectId = 1205
                url = uri("https://gitlab.futuremind.dev/api/v4/projects/$gitlabProjectId/packages/maven")
                name 'FMGitlab'
                credentials(HttpHeaderCredentials) {
                    name = "Job-Token"
                    value = System.getenv("CI_JOB_TOKEN")
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }

            maven {
                name 'Local'
                url "$buildDir/tpayMaven/"
            }
        }

        publications {
            Release(MavenPublication) {
                groupId 'com.tpay'
                artifactId 'sdk'
                version "${_versionName}"
                artifact("$buildDir/outputs/aar/${_archiveName}-release.aar")
                artifact source: "$buildDir/libs/${_archiveName}-sources.jar", classifier: 'sources', extension: 'jar'
                artifact source: "$buildDir/libs/${_archiveName}-javadoc.jar", classifier: 'javadoc', extension: 'jar'

                pom.withXml {
                    //noinspection GroovyImplicitNullArgumentCall
                    def root = asNode()

                    def dependenciesNode = root.appendNode('dependencies')
                    configurations.implementation.allDependencies.each { dependency ->
                        if (dependency.name != 'unspecified' && dependency.version != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', dependency.group)
                            dependencyNode.appendNode('artifactId', dependency.name)
                            dependencyNode.appendNode('version', dependency.version)
                        }
                    }
                }
            }
        }

        publications.configureEach {
            pom.withXml {
                def root = asNode()

                root.children().last() + {
                    name 'Tpay SDK'
                    description 'Tpay - online payment operator for Android'
                    url 'https://tpay.com/'

                    licenses {
                        license {
                            name 'MIT License'
                            url 'http://www.opensource.org/licenses/mit-license.php'
                        }
                    }

                    scm {
                        url 'https://github.com/tpay-com/tpay-android'
                        connection 'scm:git:git://github.com/tpay-com/tpay-android.git'
                        developerConnection 'scm:git:git://github.com/tpay-com/tpay-android.git'
                    }

                    developers {
                        developer {
                            id 'com.tpay.devs'
                            name 'Tpay Auto Commit'
                        }
                    }
                }
            }
        }
    }
}
