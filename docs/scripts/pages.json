[
  {
    "name": "CORRECT",
    "description": "com.tpay.sdk.api.screenless.TransactionState.CORRECT",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-c-o-r-r-e-c-t/index.html",
    "searchKeys": [
      "CORRECT",
      "CORRECT",
      "com.tpay.sdk.api.screenless.TransactionState.CORRECT"
    ]
  },
  {
    "name": "DAILY",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.DAILY",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/-d-a-i-l-y/index.html",
    "searchKeys": [
      "DAILY",
      "DAILY",
      "com.tpay.sdk.api.models.transaction.Frequency.DAILY"
    ]
  },
  {
    "name": "DECLINED",
    "description": "com.tpay.sdk.api.screenless.TransactionState.DECLINED",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-d-e-c-l-i-n-e-d/index.html",
    "searchKeys": [
      "DECLINED",
      "DECLINED",
      "com.tpay.sdk.api.screenless.TransactionState.DECLINED"
    ]
  },
  {
    "name": "EN",
    "description": "com.tpay.sdk.api.models.Language.EN",
    "location": "sdk/com.tpay.sdk.api.models/-language/-e-n/index.html",
    "searchKeys": [
      "EN",
      "EN",
      "com.tpay.sdk.api.models.Language.EN"
    ]
  },
  {
    "name": "ERROR",
    "description": "com.tpay.sdk.api.screenless.TransactionState.ERROR",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-e-r-r-o-r/index.html",
    "searchKeys": [
      "ERROR",
      "ERROR",
      "com.tpay.sdk.api.screenless.TransactionState.ERROR"
    ]
  },
  {
    "name": "FLUTTER",
    "description": "com.tpay.sdk.api.models.Compatibility.FLUTTER",
    "location": "sdk/com.tpay.sdk.api.models/-compatibility/-f-l-u-t-t-e-r/index.html",
    "searchKeys": [
      "FLUTTER",
      "FLUTTER",
      "com.tpay.sdk.api.models.Compatibility.FLUTTER"
    ]
  },
  {
    "name": "GOOGLE_PAY",
    "description": "com.tpay.sdk.api.models.DigitalWallet.GOOGLE_PAY",
    "location": "sdk/com.tpay.sdk.api.models/-digital-wallet/-g-o-o-g-l-e_-p-a-y/index.html",
    "searchKeys": [
      "GOOGLE_PAY",
      "GOOGLE_PAY",
      "com.tpay.sdk.api.models.DigitalWallet.GOOGLE_PAY"
    ]
  },
  {
    "name": "MASTERCARD",
    "description": "com.tpay.sdk.api.paycard.CreditCardBrand.MASTERCARD",
    "location": "sdk/com.tpay.sdk.api.paycard/-credit-card-brand/-m-a-s-t-e-r-c-a-r-d/index.html",
    "searchKeys": [
      "MASTERCARD",
      "MASTERCARD",
      "com.tpay.sdk.api.paycard.CreditCardBrand.MASTERCARD"
    ]
  },
  {
    "name": "MONTHLY",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.MONTHLY",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/-m-o-n-t-h-l-y/index.html",
    "searchKeys": [
      "MONTHLY",
      "MONTHLY",
      "com.tpay.sdk.api.models.transaction.Frequency.MONTHLY"
    ]
  },
  {
    "name": "NATIVE",
    "description": "com.tpay.sdk.api.models.Compatibility.NATIVE",
    "location": "sdk/com.tpay.sdk.api.models/-compatibility/-n-a-t-i-v-e/index.html",
    "searchKeys": [
      "NATIVE",
      "NATIVE",
      "com.tpay.sdk.api.models.Compatibility.NATIVE"
    ]
  },
  {
    "name": "PAID",
    "description": "com.tpay.sdk.api.screenless.TransactionState.PAID",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-p-a-i-d/index.html",
    "searchKeys": [
      "PAID",
      "PAID",
      "com.tpay.sdk.api.screenless.TransactionState.PAID"
    ]
  },
  {
    "name": "PAY_PO",
    "description": "com.tpay.sdk.api.models.InstallmentPayment.PAY_PO",
    "location": "sdk/com.tpay.sdk.api.models/-installment-payment/-p-a-y_-p-o/index.html",
    "searchKeys": [
      "PAY_PO",
      "PAY_PO",
      "com.tpay.sdk.api.models.InstallmentPayment.PAY_PO"
    ]
  },
  {
    "name": "PENDING",
    "description": "com.tpay.sdk.api.screenless.TransactionState.PENDING",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-p-e-n-d-i-n-g/index.html",
    "searchKeys": [
      "PENDING",
      "PENDING",
      "com.tpay.sdk.api.screenless.TransactionState.PENDING"
    ]
  },
  {
    "name": "PL",
    "description": "com.tpay.sdk.api.models.Language.PL",
    "location": "sdk/com.tpay.sdk.api.models/-language/-p-l/index.html",
    "searchKeys": [
      "PL",
      "PL",
      "com.tpay.sdk.api.models.Language.PL"
    ]
  },
  {
    "name": "PRODUCTION",
    "description": "com.tpay.sdk.api.models.Environment.PRODUCTION",
    "location": "sdk/com.tpay.sdk.api.models/-environment/-p-r-o-d-u-c-t-i-o-n/index.html",
    "searchKeys": [
      "PRODUCTION",
      "PRODUCTION",
      "com.tpay.sdk.api.models.Environment.PRODUCTION"
    ]
  },
  {
    "name": "PRODUCTION",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.PRODUCTION",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-environment/-p-r-o-d-u-c-t-i-o-n/index.html",
    "searchKeys": [
      "PRODUCTION",
      "PRODUCTION",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.PRODUCTION"
    ]
  },
  {
    "name": "QUARTERLY",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.QUARTERLY",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/-q-u-a-r-t-e-r-l-y/index.html",
    "searchKeys": [
      "QUARTERLY",
      "QUARTERLY",
      "com.tpay.sdk.api.models.transaction.Frequency.QUARTERLY"
    ]
  },
  {
    "name": "RATY_PEKAO",
    "description": "com.tpay.sdk.api.models.InstallmentPayment.RATY_PEKAO",
    "location": "sdk/com.tpay.sdk.api.models/-installment-payment/-r-a-t-y_-p-e-k-a-o/index.html",
    "searchKeys": [
      "RATY_PEKAO",
      "RATY_PEKAO",
      "com.tpay.sdk.api.models.InstallmentPayment.RATY_PEKAO"
    ]
  },
  {
    "name": "REACT_NATIVE",
    "description": "com.tpay.sdk.api.models.Compatibility.REACT_NATIVE",
    "location": "sdk/com.tpay.sdk.api.models/-compatibility/-r-e-a-c-t_-n-a-t-i-v-e/index.html",
    "searchKeys": [
      "REACT_NATIVE",
      "REACT_NATIVE",
      "com.tpay.sdk.api.models.Compatibility.REACT_NATIVE"
    ]
  },
  {
    "name": "REFUND",
    "description": "com.tpay.sdk.api.screenless.TransactionState.REFUND",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-r-e-f-u-n-d/index.html",
    "searchKeys": [
      "REFUND",
      "REFUND",
      "com.tpay.sdk.api.screenless.TransactionState.REFUND"
    ]
  },
  {
    "name": "SANDBOX",
    "description": "com.tpay.sdk.api.models.Environment.SANDBOX",
    "location": "sdk/com.tpay.sdk.api.models/-environment/-s-a-n-d-b-o-x/index.html",
    "searchKeys": [
      "SANDBOX",
      "SANDBOX",
      "com.tpay.sdk.api.models.Environment.SANDBOX"
    ]
  },
  {
    "name": "TEST",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.TEST",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-environment/-t-e-s-t/index.html",
    "searchKeys": [
      "TEST",
      "TEST",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.TEST"
    ]
  },
  {
    "name": "UNKNOWN",
    "description": "com.tpay.sdk.api.paycard.CreditCardBrand.UNKNOWN",
    "location": "sdk/com.tpay.sdk.api.paycard/-credit-card-brand/-u-n-k-n-o-w-n/index.html",
    "searchKeys": [
      "UNKNOWN",
      "UNKNOWN",
      "com.tpay.sdk.api.paycard.CreditCardBrand.UNKNOWN"
    ]
  },
  {
    "name": "UNKNOWN",
    "description": "com.tpay.sdk.api.screenless.TransactionState.UNKNOWN",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-u-n-k-n-o-w-n/index.html",
    "searchKeys": [
      "UNKNOWN",
      "UNKNOWN",
      "com.tpay.sdk.api.screenless.TransactionState.UNKNOWN"
    ]
  },
  {
    "name": "VISA",
    "description": "com.tpay.sdk.api.paycard.CreditCardBrand.VISA",
    "location": "sdk/com.tpay.sdk.api.paycard/-credit-card-brand/-v-i-s-a/index.html",
    "searchKeys": [
      "VISA",
      "VISA",
      "com.tpay.sdk.api.paycard.CreditCardBrand.VISA"
    ]
  },
  {
    "name": "WEEKLY",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.WEEKLY",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/-w-e-e-k-l-y/index.html",
    "searchKeys": [
      "WEEKLY",
      "WEEKLY",
      "com.tpay.sdk.api.models.transaction.Frequency.WEEKLY"
    ]
  },
  {
    "name": "YEARLY",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.YEARLY",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/-y-e-a-r-l-y/index.html",
    "searchKeys": [
      "YEARLY",
      "YEARLY",
      "com.tpay.sdk.api.models.transaction.Frequency.YEARLY"
    ]
  },
  {
    "name": "abstract class Payment<T>",
    "description": "com.tpay.sdk.api.screenless.Payment",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment/index.html",
    "searchKeys": [
      "Payment",
      "abstract class Payment<T>",
      "com.tpay.sdk.api.screenless.Payment"
    ]
  },
  {
    "name": "abstract class PaymentBuilder<T : Payment<*>>",
    "description": "com.tpay.sdk.api.screenless.PaymentBuilder",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-builder/index.html",
    "searchKeys": [
      "PaymentBuilder",
      "abstract class PaymentBuilder<T : Payment<*>>",
      "com.tpay.sdk.api.screenless.PaymentBuilder"
    ]
  },
  {
    "name": "abstract fun addObserver(paymentDelegate: PaymentDelegate)",
    "description": "com.tpay.sdk.api.models.ObservablePayment.addObserver",
    "location": "sdk/com.tpay.sdk.api.models/-observable-payment/add-observer.html",
    "searchKeys": [
      "addObserver",
      "abstract fun addObserver(paymentDelegate: PaymentDelegate)",
      "com.tpay.sdk.api.models.ObservablePayment.addObserver"
    ]
  },
  {
    "name": "abstract fun build(): T",
    "description": "com.tpay.sdk.api.screenless.PaymentBuilder.build",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-builder/build.html",
    "searchKeys": [
      "build",
      "abstract fun build(): T",
      "com.tpay.sdk.api.screenless.PaymentBuilder.build"
    ]
  },
  {
    "name": "abstract fun execute(longPollingConfig: LongPollingConfig? = null, onResult: (T) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.Payment.execute",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment/execute.html",
    "searchKeys": [
      "execute",
      "abstract fun execute(longPollingConfig: LongPollingConfig? = null, onResult: (T) -> Unit)",
      "com.tpay.sdk.api.screenless.Payment.execute"
    ]
  },
  {
    "name": "abstract fun merchantCity(language: Language): String?",
    "description": "com.tpay.sdk.api.providers.MerchantDetailsProvider.merchantCity",
    "location": "sdk/com.tpay.sdk.api.providers/-merchant-details-provider/merchant-city.html",
    "searchKeys": [
      "merchantCity",
      "abstract fun merchantCity(language: Language): String?",
      "com.tpay.sdk.api.providers.MerchantDetailsProvider.merchantCity"
    ]
  },
  {
    "name": "abstract fun merchantDisplayName(language: Language): String",
    "description": "com.tpay.sdk.api.providers.MerchantDetailsProvider.merchantDisplayName",
    "location": "sdk/com.tpay.sdk.api.providers/-merchant-details-provider/merchant-display-name.html",
    "searchKeys": [
      "merchantDisplayName",
      "abstract fun merchantDisplayName(language: Language): String",
      "com.tpay.sdk.api.providers.MerchantDetailsProvider.merchantDisplayName"
    ]
  },
  {
    "name": "abstract fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?)",
    "description": "com.tpay.sdk.api.models.ActivityResultListener.onActivityResult",
    "location": "sdk/com.tpay.sdk.api.models/-activity-result-listener/on-activity-result.html",
    "searchKeys": [
      "onActivityResult",
      "abstract fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?)",
      "com.tpay.sdk.api.models.ActivityResultListener.onActivityResult"
    ]
  },
  {
    "name": "abstract fun onAddCardFailure()",
    "description": "com.tpay.sdk.api.addCard.AddCardDelegate.onAddCardFailure",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card-delegate/on-add-card-failure.html",
    "searchKeys": [
      "onAddCardFailure",
      "abstract fun onAddCardFailure()",
      "com.tpay.sdk.api.addCard.AddCardDelegate.onAddCardFailure"
    ]
  },
  {
    "name": "abstract fun onAddCardSuccess(tokenizationId: String?)",
    "description": "com.tpay.sdk.api.addCard.AddCardDelegate.onAddCardSuccess",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card-delegate/on-add-card-success.html",
    "searchKeys": [
      "onAddCardSuccess",
      "abstract fun onAddCardSuccess(tokenizationId: String?)",
      "com.tpay.sdk.api.addCard.AddCardDelegate.onAddCardSuccess"
    ]
  },
  {
    "name": "abstract fun onBackPressed()",
    "description": "com.tpay.sdk.api.models.Presentable.onBackPressed",
    "location": "sdk/com.tpay.sdk.api.models/-presentable/on-back-pressed.html",
    "searchKeys": [
      "onBackPressed",
      "abstract fun onBackPressed()",
      "com.tpay.sdk.api.models.Presentable.onBackPressed"
    ]
  },
  {
    "name": "abstract fun onModuleClosed()",
    "description": "com.tpay.sdk.api.addCard.AddCardDelegate.onModuleClosed",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card-delegate/on-module-closed.html",
    "searchKeys": [
      "onModuleClosed",
      "abstract fun onModuleClosed()",
      "com.tpay.sdk.api.addCard.AddCardDelegate.onModuleClosed"
    ]
  },
  {
    "name": "abstract fun onModuleClosed()",
    "description": "com.tpay.sdk.api.payment.PaymentDelegate.onModuleClosed",
    "location": "sdk/com.tpay.sdk.api.payment/-payment-delegate/on-module-closed.html",
    "searchKeys": [
      "onModuleClosed",
      "abstract fun onModuleClosed()",
      "com.tpay.sdk.api.payment.PaymentDelegate.onModuleClosed"
    ]
  },
  {
    "name": "abstract fun onPaymentCancelled(transactionId: String?)",
    "description": "com.tpay.sdk.api.payment.PaymentDelegate.onPaymentCancelled",
    "location": "sdk/com.tpay.sdk.api.payment/-payment-delegate/on-payment-cancelled.html",
    "searchKeys": [
      "onPaymentCancelled",
      "abstract fun onPaymentCancelled(transactionId: String?)",
      "com.tpay.sdk.api.payment.PaymentDelegate.onPaymentCancelled"
    ]
  },
  {
    "name": "abstract fun onPaymentCompleted(transactionId: String?)",
    "description": "com.tpay.sdk.api.payment.PaymentDelegate.onPaymentCompleted",
    "location": "sdk/com.tpay.sdk.api.payment/-payment-delegate/on-payment-completed.html",
    "searchKeys": [
      "onPaymentCompleted",
      "abstract fun onPaymentCompleted(transactionId: String?)",
      "com.tpay.sdk.api.payment.PaymentDelegate.onPaymentCompleted"
    ]
  },
  {
    "name": "abstract fun onPaymentCreated(transactionId: String?)",
    "description": "com.tpay.sdk.api.payment.PaymentDelegate.onPaymentCreated",
    "location": "sdk/com.tpay.sdk.api.payment/-payment-delegate/on-payment-created.html",
    "searchKeys": [
      "onPaymentCreated",
      "abstract fun onPaymentCreated(transactionId: String?)",
      "com.tpay.sdk.api.payment.PaymentDelegate.onPaymentCreated"
    ]
  },
  {
    "name": "abstract fun onPaymentFailure()",
    "description": "com.tpay.sdk.api.webView.WebViewCallback.onPaymentFailure",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-callback/on-payment-failure.html",
    "searchKeys": [
      "onPaymentFailure",
      "abstract fun onPaymentFailure()",
      "com.tpay.sdk.api.webView.WebViewCallback.onPaymentFailure"
    ]
  },
  {
    "name": "abstract fun onPaymentSuccess()",
    "description": "com.tpay.sdk.api.webView.WebViewCallback.onPaymentSuccess",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-callback/on-payment-success.html",
    "searchKeys": [
      "onPaymentSuccess",
      "abstract fun onPaymentSuccess()",
      "com.tpay.sdk.api.webView.WebViewCallback.onPaymentSuccess"
    ]
  },
  {
    "name": "abstract fun onWebViewClosed()",
    "description": "com.tpay.sdk.api.webView.WebViewCallback.onWebViewClosed",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-callback/on-web-view-closed.html",
    "searchKeys": [
      "onWebViewClosed",
      "abstract fun onWebViewClosed()",
      "com.tpay.sdk.api.webView.WebViewCallback.onWebViewClosed"
    ]
  },
  {
    "name": "abstract fun present(): SheetOpenResult",
    "description": "com.tpay.sdk.api.models.Presentable.present",
    "location": "sdk/com.tpay.sdk.api.models/-presentable/present.html",
    "searchKeys": [
      "present",
      "abstract fun present(): SheetOpenResult",
      "com.tpay.sdk.api.models.Presentable.present"
    ]
  },
  {
    "name": "abstract fun regulationsLink(language: Language): String",
    "description": "com.tpay.sdk.api.providers.MerchantDetailsProvider.regulationsLink",
    "location": "sdk/com.tpay.sdk.api.providers/-merchant-details-provider/regulations-link.html",
    "searchKeys": [
      "regulationsLink",
      "abstract fun regulationsLink(language: Language): String",
      "com.tpay.sdk.api.providers.MerchantDetailsProvider.regulationsLink"
    ]
  },
  {
    "name": "abstract fun removeObserver()",
    "description": "com.tpay.sdk.api.models.ObservablePayment.removeObserver",
    "location": "sdk/com.tpay.sdk.api.models/-observable-payment/remove-observer.html",
    "searchKeys": [
      "removeObserver",
      "abstract fun removeObserver()",
      "com.tpay.sdk.api.models.ObservablePayment.removeObserver"
    ]
  },
  {
    "name": "abstract val amount: Double",
    "description": "com.tpay.sdk.api.models.transaction.Transaction.amount",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-transaction/amount.html",
    "searchKeys": [
      "amount",
      "abstract val amount: Double",
      "com.tpay.sdk.api.models.transaction.Transaction.amount"
    ]
  },
  {
    "name": "abstract val description: String",
    "description": "com.tpay.sdk.api.models.transaction.Transaction.description",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-transaction/description.html",
    "searchKeys": [
      "description",
      "abstract val description: String",
      "com.tpay.sdk.api.models.transaction.Transaction.description"
    ]
  },
  {
    "name": "abstract val expirationDate: Date",
    "description": "com.tpay.sdk.api.models.transaction.Recursive.expirationDate",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-recursive/expiration-date.html",
    "searchKeys": [
      "expirationDate",
      "abstract val expirationDate: Date",
      "com.tpay.sdk.api.models.transaction.Recursive.expirationDate"
    ]
  },
  {
    "name": "abstract val frequency: Frequency",
    "description": "com.tpay.sdk.api.models.transaction.Recursive.frequency",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-recursive/frequency.html",
    "searchKeys": [
      "frequency",
      "abstract val frequency: Frequency",
      "com.tpay.sdk.api.models.transaction.Recursive.frequency"
    ]
  },
  {
    "name": "abstract val notifications: Notifications?",
    "description": "com.tpay.sdk.api.models.transaction.Transaction.notifications",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-transaction/notifications.html",
    "searchKeys": [
      "notifications",
      "abstract val notifications: Notifications?",
      "com.tpay.sdk.api.models.transaction.Transaction.notifications"
    ]
  },
  {
    "name": "abstract val payerContext: PayerContext",
    "description": "com.tpay.sdk.api.models.transaction.Transaction.payerContext",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-transaction/payer-context.html",
    "searchKeys": [
      "payerContext",
      "abstract val payerContext: PayerContext",
      "com.tpay.sdk.api.models.transaction.Transaction.payerContext"
    ]
  },
  {
    "name": "abstract val quantity: Quantity",
    "description": "com.tpay.sdk.api.models.transaction.Recursive.quantity",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-recursive/quantity.html",
    "searchKeys": [
      "quantity",
      "abstract val quantity: Quantity",
      "com.tpay.sdk.api.models.transaction.Recursive.quantity"
    ]
  },
  {
    "name": "abstract var apiConfiguration: CertificatePinningConfiguration",
    "description": "com.tpay.sdk.api.providers.SSLCertificatesProvider.apiConfiguration",
    "location": "sdk/com.tpay.sdk.api.providers/-s-s-l-certificates-provider/api-configuration.html",
    "searchKeys": [
      "apiConfiguration",
      "abstract var apiConfiguration: CertificatePinningConfiguration",
      "com.tpay.sdk.api.providers.SSLCertificatesProvider.apiConfiguration"
    ]
  },
  {
    "name": "class AmbiguousBlikAliasDTO(json: String) : JSONObject",
    "description": "com.tpay.sdk.server.dto.parts.AmbiguousBlikAliasDTO",
    "location": "sdk/com.tpay.sdk.server.dto.parts/-ambiguous-blik-alias-d-t-o/index.html",
    "searchKeys": [
      "AmbiguousBlikAliasDTO",
      "class AmbiguousBlikAliasDTO(json: String) : JSONObject",
      "com.tpay.sdk.server.dto.parts.AmbiguousBlikAliasDTO"
    ]
  },
  {
    "name": "class AutomaticPaymentMethods(val blikAlias: BlikAlias? = null, val tokenizedCards: List<TokenizedCard> = emptyList()) : Parcelable",
    "description": "com.tpay.sdk.api.models.AutomaticPaymentMethods",
    "location": "sdk/com.tpay.sdk.api.models/-automatic-payment-methods/index.html",
    "searchKeys": [
      "AutomaticPaymentMethods",
      "class AutomaticPaymentMethods(val blikAlias: BlikAlias? = null, val tokenizedCards: List<TokenizedCard> = emptyList()) : Parcelable",
      "com.tpay.sdk.api.models.AutomaticPaymentMethods"
    ]
  },
  {
    "name": "class BLIKAmbiguousAliasPayment : Payment<CreateBLIKTransactionResult> ",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKAmbiguousAliasPayment",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-ambiguous-alias-payment/index.html",
    "searchKeys": [
      "BLIKAmbiguousAliasPayment",
      "class BLIKAmbiguousAliasPayment : Payment<CreateBLIKTransactionResult> ",
      "com.tpay.sdk.api.screenless.blik.BLIKAmbiguousAliasPayment"
    ]
  },
  {
    "name": "class BLIKPayment : Payment<CreateBLIKTransactionResult> ",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/index.html",
    "searchKeys": [
      "BLIKPayment",
      "class BLIKPayment : Payment<CreateBLIKTransactionResult> ",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment"
    ]
  },
  {
    "name": "class Builder : PaymentBuilder<BLIKPayment> ",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/index.html",
    "searchKeys": [
      "Builder",
      "class Builder : PaymentBuilder<BLIKPayment> ",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder"
    ]
  },
  {
    "name": "class Builder : PaymentBuilder<CreditCardPayment> ",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/index.html",
    "searchKeys": [
      "Builder",
      "class Builder : PaymentBuilder<CreditCardPayment> ",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder"
    ]
  },
  {
    "name": "class Builder : PaymentBuilder<GooglePayPayment> ",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/-builder/index.html",
    "searchKeys": [
      "Builder",
      "class Builder : PaymentBuilder<GooglePayPayment> ",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder"
    ]
  },
  {
    "name": "class Builder : PaymentBuilder<PayPoPayment> ",
    "description": "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-pay-po-payment/-builder/index.html",
    "searchKeys": [
      "Builder",
      "class Builder : PaymentBuilder<PayPoPayment> ",
      "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder"
    ]
  },
  {
    "name": "class Builder : PaymentBuilder<PekaoInstallmentPayment> ",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/-builder/index.html",
    "searchKeys": [
      "Builder",
      "class Builder : PaymentBuilder<PekaoInstallmentPayment> ",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder"
    ]
  },
  {
    "name": "class Builder : PaymentBuilder<TransferPayment> ",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/-builder/index.html",
    "searchKeys": [
      "Builder",
      "class Builder : PaymentBuilder<TransferPayment> ",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder"
    ]
  },
  {
    "name": "class CreditCardPayment : Payment<CreateCreditCardTransactionResult> ",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/index.html",
    "searchKeys": [
      "CreditCardPayment",
      "class CreditCardPayment : Payment<CreateCreditCardTransactionResult> ",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment"
    ]
  },
  {
    "name": "class GetPaymentChannels",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannels",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels/index.html",
    "searchKeys": [
      "GetPaymentChannels",
      "class GetPaymentChannels",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannels"
    ]
  },
  {
    "name": "class GooglePayPayment : Payment<CreateGooglePayTransactionResult> ",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/index.html",
    "searchKeys": [
      "GooglePayPayment",
      "class GooglePayPayment : Payment<CreateGooglePayTransactionResult> ",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment"
    ]
  },
  {
    "name": "class GooglePayRequest(price: Double, merchantName: String, merchantId: String) : JSONObject",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayRequest",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-request/index.html",
    "searchKeys": [
      "GooglePayRequest",
      "class GooglePayRequest(price: Double, merchantName: String, merchantId: String) : JSONObject",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayRequest"
    ]
  },
  {
    "name": "class GooglePayUtil(activity: Activity, googlePayRequest: GooglePayRequest, googlePayEnvironment: GooglePayEnvironment = GooglePayEnvironment.PRODUCTION, customRequestCode: Int? = null)",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-util/index.html",
    "searchKeys": [
      "GooglePayUtil",
      "class GooglePayUtil(activity: Activity, googlePayRequest: GooglePayRequest, googlePayEnvironment: GooglePayEnvironment = GooglePayEnvironment.PRODUCTION, customRequestCode: Int? = null)",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil"
    ]
  },
  {
    "name": "class ImageDTO(json: JSONObject)",
    "description": "com.tpay.sdk.server.dto.parts.ImageDTO",
    "location": "sdk/com.tpay.sdk.server.dto.parts/-image-d-t-o/index.html",
    "searchKeys": [
      "ImageDTO",
      "class ImageDTO(json: JSONObject)",
      "com.tpay.sdk.server.dto.parts.ImageDTO"
    ]
  },
  {
    "name": "class LongPolling",
    "description": "com.tpay.sdk.api.screenless.LongPolling",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling/index.html",
    "searchKeys": [
      "LongPolling",
      "class LongPolling",
      "com.tpay.sdk.api.screenless.LongPolling"
    ]
  },
  {
    "name": "class PayButton constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0) : FrameLayout",
    "description": "com.tpay.sdk.PayButton",
    "location": "sdk/com.tpay.sdk/-pay-button/index.html",
    "searchKeys": [
      "PayButton",
      "class PayButton constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0) : FrameLayout",
      "com.tpay.sdk.PayButton"
    ]
  },
  {
    "name": "class PayCardEncryptor(publicKeyHash: String)",
    "description": "com.tpay.sdk.api.PayCardEncryptor",
    "location": "sdk/com.tpay.sdk.api/-pay-card-encryptor/index.html",
    "searchKeys": [
      "PayCardEncryptor",
      "class PayCardEncryptor(publicKeyHash: String)",
      "com.tpay.sdk.api.PayCardEncryptor"
    ]
  },
  {
    "name": "class PayPoPayment : Payment<CreatePayPoTransactionResult> ",
    "description": "com.tpay.sdk.api.screenless.payPo.PayPoPayment",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-pay-po-payment/index.html",
    "searchKeys": [
      "PayPoPayment",
      "class PayPoPayment : Payment<CreatePayPoTransactionResult> ",
      "com.tpay.sdk.api.screenless.payPo.PayPoPayment"
    ]
  },
  {
    "name": "class PekaoInstallmentPayment : Payment<CreatePekaoInstallmentTransactionResult> ",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/index.html",
    "searchKeys": [
      "PekaoInstallmentPayment",
      "class PekaoInstallmentPayment : Payment<CreatePekaoInstallmentTransactionResult> ",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment"
    ]
  },
  {
    "name": "class Registered(val value: String, val label: String? = null) : BlikAlias",
    "description": "com.tpay.sdk.api.models.BlikAlias.Registered",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/-registered/index.html",
    "searchKeys": [
      "Registered",
      "class Registered(val value: String, val label: String? = null) : BlikAlias",
      "com.tpay.sdk.api.models.BlikAlias.Registered"
    ]
  },
  {
    "name": "class Sheet(tokenization: Tokenization, activity: Activity, supportFragmentManager: FragmentManager) : AddCard, Presentable",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/index.html",
    "searchKeys": [
      "Sheet",
      "class Sheet(tokenization: Tokenization, activity: Activity, supportFragmentManager: FragmentManager) : AddCard, Presentable",
      "com.tpay.sdk.api.addCard.AddCard.Sheet"
    ]
  },
  {
    "name": "class Sheet(transaction: CardTokenTransaction, activity: Activity, supportFragmentManager: FragmentManager) : CardTokenPayment, Presentable, ObservablePayment",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/index.html",
    "searchKeys": [
      "Sheet",
      "class Sheet(transaction: CardTokenTransaction, activity: Activity, supportFragmentManager: FragmentManager) : CardTokenPayment, Presentable, ObservablePayment",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet"
    ]
  },
  {
    "name": "class Sheet(transaction: Transaction, activity: Activity, supportFragmentManager: FragmentManager) : Payment, Presentable, ObservablePayment, ActivityResultListener",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/index.html",
    "searchKeys": [
      "Sheet",
      "class Sheet(transaction: Transaction, activity: Activity, supportFragmentManager: FragmentManager) : Payment, Presentable, ObservablePayment, ActivityResultListener",
      "com.tpay.sdk.api.payment.Payment.Sheet"
    ]
  },
  {
    "name": "class Sheet(webViewConfiguration: WebViewConfiguration, activity: Activity, supportFragmentManager: FragmentManager) : Presentable",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/index.html",
    "searchKeys": [
      "Sheet",
      "class Sheet(webViewConfiguration: WebViewConfiguration, activity: Activity, supportFragmentManager: FragmentManager) : Presentable",
      "com.tpay.sdk.api.webView.WebView.Sheet"
    ]
  },
  {
    "name": "class TransferPayment : Payment<CreateTransferTransactionResult> ",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/index.html",
    "searchKeys": [
      "TransferPayment",
      "class TransferPayment : Payment<CreateTransferTransactionResult> ",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment"
    ]
  },
  {
    "name": "class WebView",
    "description": "com.tpay.sdk.api.webView.WebView",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/index.html",
    "searchKeys": [
      "WebView",
      "class WebView",
      "com.tpay.sdk.api.webView.WebView"
    ]
  },
  {
    "name": "const val CIPHER_TRANSFORMATION: String",
    "description": "com.tpay.sdk.api.PayCardEncryptor.Companion.CIPHER_TRANSFORMATION",
    "location": "sdk/com.tpay.sdk.api/-pay-card-encryptor/-companion/-c-i-p-h-e-r_-t-r-a-n-s-f-o-r-m-a-t-i-o-n.html",
    "searchKeys": [
      "CIPHER_TRANSFORMATION",
      "const val CIPHER_TRANSFORMATION: String",
      "com.tpay.sdk.api.PayCardEncryptor.Companion.CIPHER_TRANSFORMATION"
    ]
  },
  {
    "name": "const val ERROR_URL_BLANK: String",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult.Companion.ERROR_URL_BLANK",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/-companion/-e-r-r-o-r_-u-r-l_-b-l-a-n-k.html",
    "searchKeys": [
      "ERROR_URL_BLANK",
      "const val ERROR_URL_BLANK: String",
      "com.tpay.sdk.api.webView.WebViewCheckResult.Companion.ERROR_URL_BLANK"
    ]
  },
  {
    "name": "const val GOOGLE_PAY_SCREENLESS_REQUEST_CODE: Int = 2002",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.Companion.GOOGLE_PAY_SCREENLESS_REQUEST_CODE",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-util/-companion/-g-o-o-g-l-e_-p-a-y_-s-c-r-e-e-n-l-e-s-s_-r-e-q-u-e-s-t_-c-o-d-e.html",
    "searchKeys": [
      "GOOGLE_PAY_SCREENLESS_REQUEST_CODE",
      "const val GOOGLE_PAY_SCREENLESS_REQUEST_CODE: Int = 2002",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.Companion.GOOGLE_PAY_SCREENLESS_REQUEST_CODE"
    ]
  },
  {
    "name": "const val GOOGLE_PAY_UI_REQUEST_CODE: Int = 2001",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.Companion.GOOGLE_PAY_UI_REQUEST_CODE",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-util/-companion/-g-o-o-g-l-e_-p-a-y_-u-i_-r-e-q-u-e-s-t_-c-o-d-e.html",
    "searchKeys": [
      "GOOGLE_PAY_UI_REQUEST_CODE",
      "const val GOOGLE_PAY_UI_REQUEST_CODE: Int = 2001",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.Companion.GOOGLE_PAY_UI_REQUEST_CODE"
    ]
  },
  {
    "name": "const val KEY_FACTORY_ALGORITHM: String",
    "description": "com.tpay.sdk.api.PayCardEncryptor.Companion.KEY_FACTORY_ALGORITHM",
    "location": "sdk/com.tpay.sdk.api/-pay-card-encryptor/-companion/-k-e-y_-f-a-c-t-o-r-y_-a-l-g-o-r-i-t-h-m.html",
    "searchKeys": [
      "KEY_FACTORY_ALGORITHM",
      "const val KEY_FACTORY_ALGORITHM: String",
      "com.tpay.sdk.api.PayCardEncryptor.Companion.KEY_FACTORY_ALGORITHM"
    ]
  },
  {
    "name": "const val NO_AUTH_ERROR_MESSAGE: String",
    "description": "com.tpay.sdk.api.screenless.Payment.Companion.NO_AUTH_ERROR_MESSAGE",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment/-companion/-n-o_-a-u-t-h_-e-r-r-o-r_-m-e-s-s-a-g-e.html",
    "searchKeys": [
      "NO_AUTH_ERROR_MESSAGE",
      "const val NO_AUTH_ERROR_MESSAGE: String",
      "com.tpay.sdk.api.screenless.Payment.Companion.NO_AUTH_ERROR_MESSAGE"
    ]
  },
  {
    "name": "const val PAYMENT_URL_BLANK: String",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult.Companion.PAYMENT_URL_BLANK",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/-companion/-p-a-y-m-e-n-t_-u-r-l_-b-l-a-n-k.html",
    "searchKeys": [
      "PAYMENT_URL_BLANK",
      "const val PAYMENT_URL_BLANK: String",
      "com.tpay.sdk.api.webView.WebViewCheckResult.Companion.PAYMENT_URL_BLANK"
    ]
  },
  {
    "name": "const val SUCCESS_URL_BLANK: String",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult.Companion.SUCCESS_URL_BLANK",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/-companion/-s-u-c-c-e-s-s_-u-r-l_-b-l-a-n-k.html",
    "searchKeys": [
      "SUCCESS_URL_BLANK",
      "const val SUCCESS_URL_BLANK: String",
      "com.tpay.sdk.api.webView.WebViewCheckResult.Companion.SUCCESS_URL_BLANK"
    ]
  },
  {
    "name": "data class AccessToken(val token: String, val validForSeconds: Int)",
    "description": "com.tpay.sdk.server.AccessToken",
    "location": "sdk/com.tpay.sdk.server/-access-token/index.html",
    "searchKeys": [
      "AccessToken",
      "data class AccessToken(val token: String, val validForSeconds: Int)",
      "com.tpay.sdk.server.AccessToken"
    ]
  },
  {
    "name": "data class Address(var address: String?, var city: String?, var countryCode: String?, var postalCode: String?) : Parcelable",
    "description": "com.tpay.sdk.api.models.payer.Payer.Address",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/-address/index.html",
    "searchKeys": [
      "Address",
      "data class Address(var address: String?, var city: String?, var countryCode: String?, var postalCode: String?) : Parcelable",
      "com.tpay.sdk.api.models.payer.Payer.Address"
    ]
  },
  {
    "name": "data class AmbiguousAlias(val name: String, val code: String)",
    "description": "com.tpay.sdk.api.screenless.blik.AmbiguousAlias",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-ambiguous-alias/index.html",
    "searchKeys": [
      "AmbiguousAlias",
      "data class AmbiguousAlias(val name: String, val code: String)",
      "com.tpay.sdk.api.screenless.blik.AmbiguousAlias"
    ]
  },
  {
    "name": "data class AmbiguousBlikAlias(val transactionId: String, val aliases: List<AmbiguousAlias>) : CreateBLIKTransactionResult",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.AmbiguousBlikAlias",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-ambiguous-blik-alias/index.html",
    "searchKeys": [
      "AmbiguousBlikAlias",
      "data class AmbiguousBlikAlias(val transactionId: String, val aliases: List<AmbiguousAlias>) : CreateBLIKTransactionResult",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.AmbiguousBlikAlias"
    ]
  },
  {
    "name": "data class Amount(val minimum: Double?, val maximum: Double?) : PaymentConstraint",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-constraint/-amount/index.html",
    "searchKeys": [
      "Amount",
      "data class Amount(val minimum: Double?, val maximum: Double?) : PaymentConstraint",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount"
    ]
  },
  {
    "name": "data class Authorization(val clientId: String, val clientSecret: String) : Parcelable",
    "description": "com.tpay.sdk.api.models.merchant.Merchant.Authorization",
    "location": "sdk/com.tpay.sdk.api.models.merchant/-merchant/-authorization/index.html",
    "searchKeys": [
      "Authorization",
      "data class Authorization(val clientId: String, val clientSecret: String) : Parcelable",
      "com.tpay.sdk.api.models.merchant.Merchant.Authorization"
    ]
  },
  {
    "name": "data class AvailablePaymentMethods(val creditCardMethod: ChannelMethod?, val blikMethod: ChannelMethod?, val availableTransfers: List<ChannelMethod>, val availableWallets: List<WalletMethod>, val availablePekaoInstallmentMethods: List<ChannelMethod>, val payPoMethod: ChannelMethod?) : Parcelable",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/index.html",
    "searchKeys": [
      "AvailablePaymentMethods",
      "data class AvailablePaymentMethods(val creditCardMethod: ChannelMethod?, val blikMethod: ChannelMethod?, val availableTransfers: List<ChannelMethod>, val availableWallets: List<WalletMethod>, val availablePekaoInstallmentMethods: List<ChannelMethod>, val payPoMethod: ChannelMethod?) : Parcelable",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods"
    ]
  },
  {
    "name": "data class CardTokenTransaction(val amount: Double, val description: String, val payer: Payer, val cardToken: String, val notifications: Notifications?) : Parcelable",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-transaction/index.html",
    "searchKeys": [
      "CardTokenTransaction",
      "data class CardTokenTransaction(val amount: Double, val description: String, val payer: Payer, val cardToken: String, val notifications: Notifications?) : Parcelable",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction"
    ]
  },
  {
    "name": "data class CertificatePinningConfiguration(val publicKeyHash: String)",
    "description": "com.tpay.sdk.api.models.CertificatePinningConfiguration",
    "location": "sdk/com.tpay.sdk.api.models/-certificate-pinning-configuration/index.html",
    "searchKeys": [
      "CertificatePinningConfiguration",
      "data class CertificatePinningConfiguration(val publicKeyHash: String)",
      "com.tpay.sdk.api.models.CertificatePinningConfiguration"
    ]
  },
  {
    "name": "data class ChannelMethod(val channelId: Int, val name: String, val imageUrl: String) : Parcelable",
    "description": "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-channel-method/index.html",
    "searchKeys": [
      "ChannelMethod",
      "data class ChannelMethod(val channelId: Int, val name: String, val imageUrl: String) : Parcelable",
      "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod"
    ]
  },
  {
    "name": "data class ConfigurationInvalid(val devMessage: String) : SheetOpenResult",
    "description": "com.tpay.sdk.api.models.SheetOpenResult.ConfigurationInvalid",
    "location": "sdk/com.tpay.sdk.api.models/-sheet-open-result/-configuration-invalid/index.html",
    "searchKeys": [
      "ConfigurationInvalid",
      "data class ConfigurationInvalid(val devMessage: String) : SheetOpenResult",
      "com.tpay.sdk.api.models.SheetOpenResult.ConfigurationInvalid"
    ]
  },
  {
    "name": "data class ConfiguredPaymentFailed(val transactionId: String, val errorMessage: String?) : CreateBLIKTransactionResult",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.ConfiguredPaymentFailed",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-configured-payment-failed/index.html",
    "searchKeys": [
      "ConfiguredPaymentFailed",
      "data class ConfiguredPaymentFailed(val transactionId: String, val errorMessage: String?) : CreateBLIKTransactionResult",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.ConfiguredPaymentFailed"
    ]
  },
  {
    "name": "data class Created(val transactionId: String) : CreateBLIKTransactionResult",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-created/index.html",
    "searchKeys": [
      "Created",
      "data class Created(val transactionId: String) : CreateBLIKTransactionResult",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Created"
    ]
  },
  {
    "name": "data class Created(val transactionId: String, val paymentUrl: String) : CreateCreditCardTransactionResult",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-created/index.html",
    "searchKeys": [
      "Created",
      "data class Created(val transactionId: String, val paymentUrl: String) : CreateCreditCardTransactionResult",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Created"
    ]
  },
  {
    "name": "data class Created(val transactionId: String, val paymentUrl: String) : CreateGooglePayTransactionResult",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-created/index.html",
    "searchKeys": [
      "Created",
      "data class Created(val transactionId: String, val paymentUrl: String) : CreateGooglePayTransactionResult",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Created"
    ]
  },
  {
    "name": "data class Created(val transactionId: String, val paymentUrl: String) : CreatePayPoTransactionResult",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/-created/index.html",
    "searchKeys": [
      "Created",
      "data class Created(val transactionId: String, val paymentUrl: String) : CreatePayPoTransactionResult",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Created"
    ]
  },
  {
    "name": "data class Created(val transactionId: String, val paymentUrl: String) : CreatePekaoInstallmentTransactionResult",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/-created/index.html",
    "searchKeys": [
      "Created",
      "data class Created(val transactionId: String, val paymentUrl: String) : CreatePekaoInstallmentTransactionResult",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Created"
    ]
  },
  {
    "name": "data class Created(val transactionId: String, val paymentUrl: String) : CreateTransferTransactionResult",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/-created/index.html",
    "searchKeys": [
      "Created",
      "data class Created(val transactionId: String, val paymentUrl: String) : CreateTransferTransactionResult",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Created"
    ]
  },
  {
    "name": "data class CreatedAndPaid(val transactionId: String) : CreateBLIKTransactionResult",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.CreatedAndPaid",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-created-and-paid/index.html",
    "searchKeys": [
      "CreatedAndPaid",
      "data class CreatedAndPaid(val transactionId: String) : CreateBLIKTransactionResult",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.CreatedAndPaid"
    ]
  },
  {
    "name": "data class CreatedAndPaid(val transactionId: String) : CreateCreditCardTransactionResult",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.CreatedAndPaid",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-created-and-paid/index.html",
    "searchKeys": [
      "CreatedAndPaid",
      "data class CreatedAndPaid(val transactionId: String) : CreateCreditCardTransactionResult",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.CreatedAndPaid"
    ]
  },
  {
    "name": "data class CreatedAndPaid(val transactionId: String) : CreateGooglePayTransactionResult",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.CreatedAndPaid",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-created-and-paid/index.html",
    "searchKeys": [
      "CreatedAndPaid",
      "data class CreatedAndPaid(val transactionId: String) : CreateGooglePayTransactionResult",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.CreatedAndPaid"
    ]
  },
  {
    "name": "data class CreditCard(val cardNumber: String, val expirationDate: String, val cvv: String)",
    "description": "com.tpay.sdk.api.screenless.card.CreditCard",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card/index.html",
    "searchKeys": [
      "CreditCard",
      "data class CreditCard(val cardNumber: String, val expirationDate: String, val cvv: String)",
      "com.tpay.sdk.api.screenless.card.CreditCard"
    ]
  },
  {
    "name": "data class DigitalWallets(val wallets: List<DigitalWallet>) : PaymentMethod",
    "description": "com.tpay.sdk.api.models.PaymentMethod.DigitalWallets",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-digital-wallets/index.html",
    "searchKeys": [
      "DigitalWallets",
      "data class DigitalWallets(val wallets: List<DigitalWallet>) : PaymentMethod",
      "com.tpay.sdk.api.models.PaymentMethod.DigitalWallets"
    ]
  },
  {
    "name": "data class Error(val devErrorMessage: String?) : GetPaymentChannelsResult",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/-error/index.html",
    "searchKeys": [
      "Error",
      "data class Error(val devErrorMessage: String?) : GetPaymentChannelsResult",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Error"
    ]
  },
  {
    "name": "data class Error(val devErrorMessage: String?, val transactionId: String? = null) : CreatePayPoTransactionResult",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/-error/index.html",
    "searchKeys": [
      "Error",
      "data class Error(val devErrorMessage: String?, val transactionId: String? = null) : CreatePayPoTransactionResult",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Error"
    ]
  },
  {
    "name": "data class Error(val devErrorMessage: String?, val transactionId: String? = null) : CreatePekaoInstallmentTransactionResult",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/-error/index.html",
    "searchKeys": [
      "Error",
      "data class Error(val devErrorMessage: String?, val transactionId: String? = null) : CreatePekaoInstallmentTransactionResult",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Error"
    ]
  },
  {
    "name": "data class Error(val errorMessage: String?, val transactionId: String? = null) : CreateBLIKTransactionResult",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-error/index.html",
    "searchKeys": [
      "Error",
      "data class Error(val errorMessage: String?, val transactionId: String? = null) : CreateBLIKTransactionResult",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Error"
    ]
  },
  {
    "name": "data class Error(val errorMessage: String?, val transactionId: String? = null) : CreateCreditCardTransactionResult",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-error/index.html",
    "searchKeys": [
      "Error",
      "data class Error(val errorMessage: String?, val transactionId: String? = null) : CreateCreditCardTransactionResult",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Error"
    ]
  },
  {
    "name": "data class Error(val errorMessage: String?, val transactionId: String? = null) : CreateGooglePayTransactionResult",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-error/index.html",
    "searchKeys": [
      "Error",
      "data class Error(val errorMessage: String?, val transactionId: String? = null) : CreateGooglePayTransactionResult",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Error"
    ]
  },
  {
    "name": "data class Error(val errorMessage: String?, val transactionId: String? = null) : CreateTransferTransactionResult",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/-error/index.html",
    "searchKeys": [
      "Error",
      "data class Error(val errorMessage: String?, val transactionId: String? = null) : CreateTransferTransactionResult",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Error"
    ]
  },
  {
    "name": "data class GooglePayConfiguration(val merchantId: String) : Parcelable",
    "description": "com.tpay.sdk.api.models.GooglePayConfiguration",
    "location": "sdk/com.tpay.sdk.api.models/-google-pay-configuration/index.html",
    "searchKeys": [
      "GooglePayConfiguration",
      "data class GooglePayConfiguration(val merchantId: String) : Parcelable",
      "com.tpay.sdk.api.models.GooglePayConfiguration"
    ]
  },
  {
    "name": "data class GroupedPaymentChannels(val creditCardChannel: PaymentChannel?, val blikChannel: PaymentChannel?, val transferChannels: List<PaymentChannel>, val walletChannels: List<PaymentChannel>, val installmentPayments: List<InstallmentPaymentKind>)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/index.html",
    "searchKeys": [
      "GroupedPaymentChannels",
      "data class GroupedPaymentChannels(val creditCardChannel: PaymentChannel?, val blikChannel: PaymentChannel?, val transferChannels: List<PaymentChannel>, val walletChannels: List<PaymentChannel>, val installmentPayments: List<InstallmentPaymentKind>)",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels"
    ]
  },
  {
    "name": "data class InstallmentPaymentKind(val installmentPayment: InstallmentPayment, val channels: List<PaymentChannel>)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.InstallmentPaymentKind",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-installment-payment-kind/index.html",
    "searchKeys": [
      "InstallmentPaymentKind",
      "data class InstallmentPaymentKind(val installmentPayment: InstallmentPayment, val channels: List<PaymentChannel>)",
      "com.tpay.sdk.api.screenless.channelMethods.InstallmentPaymentKind"
    ]
  },
  {
    "name": "data class InstallmentPayments(val methods: List<InstallmentPayment>) : PaymentMethod",
    "description": "com.tpay.sdk.api.models.PaymentMethod.InstallmentPayments",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-installment-payments/index.html",
    "searchKeys": [
      "InstallmentPayments",
      "data class InstallmentPayments(val methods: List<InstallmentPayment>) : PaymentMethod",
      "com.tpay.sdk.api.models.PaymentMethod.InstallmentPayments"
    ]
  },
  {
    "name": "data class Invalid(val error: ModuleError.ConfigurationError) : ConfigurationCheckResult",
    "description": "com.tpay.sdk.api.models.ConfigurationCheckResult.Invalid",
    "location": "sdk/com.tpay.sdk.api.models/-configuration-check-result/-invalid/index.html",
    "searchKeys": [
      "Invalid",
      "data class Invalid(val error: ModuleError.ConfigurationError) : ConfigurationCheckResult",
      "com.tpay.sdk.api.models.ConfigurationCheckResult.Invalid"
    ]
  },
  {
    "name": "data class Invalid(val message: String) : WebViewCheckResult",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult.Invalid",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/-invalid/index.html",
    "searchKeys": [
      "Invalid",
      "data class Invalid(val message: String) : WebViewCheckResult",
      "com.tpay.sdk.api.webView.WebViewCheckResult.Invalid"
    ]
  },
  {
    "name": "data class LongPollingConfig(val delayMillis: Long, val maxRequestCount: Int? = null, val stopOnFirstRequestError: Boolean = false, val onTransactionState: (TransactionState) -> Unit, val onRequestError: (Exception) -> Unit, val onMaxRequestCount: () -> Unit = { })",
    "description": "com.tpay.sdk.api.screenless.LongPollingConfig",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling-config/index.html",
    "searchKeys": [
      "LongPollingConfig",
      "data class LongPollingConfig(val delayMillis: Long, val maxRequestCount: Int? = null, val stopOnFirstRequestError: Boolean = false, val onTransactionState: (TransactionState) -> Unit, val onRequestError: (Exception) -> Unit, val onMaxRequestCount: () -> Unit = { })",
      "com.tpay.sdk.api.screenless.LongPollingConfig"
    ]
  },
  {
    "name": "data class Merchant(val authorization: Merchant.Authorization)",
    "description": "com.tpay.sdk.api.models.merchant.Merchant",
    "location": "sdk/com.tpay.sdk.api.models.merchant/-merchant/index.html",
    "searchKeys": [
      "Merchant",
      "data class Merchant(val authorization: Merchant.Authorization)",
      "com.tpay.sdk.api.models.merchant.Merchant"
    ]
  },
  {
    "name": "data class NotRegistered(val value: String, val label: String? = null) : BlikAlias",
    "description": "com.tpay.sdk.api.models.BlikAlias.NotRegistered",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/-not-registered/index.html",
    "searchKeys": [
      "NotRegistered",
      "data class NotRegistered(val value: String, val label: String? = null) : BlikAlias",
      "com.tpay.sdk.api.models.BlikAlias.NotRegistered"
    ]
  },
  {
    "name": "data class Notifications(val notificationUrl: String, val notificationEmail: String) : Parcelable",
    "description": "com.tpay.sdk.api.screenless.Notifications",
    "location": "sdk/com.tpay.sdk.api.screenless/-notifications/index.html",
    "searchKeys": [
      "Notifications",
      "data class Notifications(val notificationUrl: String, val notificationEmail: String) : Parcelable",
      "com.tpay.sdk.api.screenless.Notifications"
    ]
  },
  {
    "name": "data class Payer(var name: String, var email: String, var phone: String?, var address: Payer.Address?) : Parcelable",
    "description": "com.tpay.sdk.api.models.payer.Payer",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/index.html",
    "searchKeys": [
      "Payer",
      "data class Payer(var name: String, var email: String, var phone: String?, var address: Payer.Address?) : Parcelable",
      "com.tpay.sdk.api.models.payer.Payer"
    ]
  },
  {
    "name": "data class PayerContext(val payer: Payer, val automaticPaymentMethods: AutomaticPaymentMethods? = null) : Parcelable",
    "description": "com.tpay.sdk.api.models.PayerContext",
    "location": "sdk/com.tpay.sdk.api.models/-payer-context/index.html",
    "searchKeys": [
      "PayerContext",
      "data class PayerContext(val payer: Payer, val automaticPaymentMethods: AutomaticPaymentMethods? = null) : Parcelable",
      "com.tpay.sdk.api.models.PayerContext"
    ]
  },
  {
    "name": "data class PaymentChannel(val id: String, val name: String, val imageUrl: String, val isAvailable: Boolean, val isOnline: Boolean, val isInstantRedirectionAvailable: Boolean, val groups: List<PaymentGroup>, val constraints: List<PaymentConstraint>)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/index.html",
    "searchKeys": [
      "PaymentChannel",
      "data class PaymentChannel(val id: String, val name: String, val imageUrl: String, val isAvailable: Boolean, val isOnline: Boolean, val isInstantRedirectionAvailable: Boolean, val groups: List<PaymentGroup>, val constraints: List<PaymentConstraint>)",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel"
    ]
  },
  {
    "name": "data class PaymentDetails(val amount: Double, val description: String, val hiddenDescription: String? = null, val language: Language? = null)",
    "description": "com.tpay.sdk.api.screenless.PaymentDetails",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-details/index.html",
    "searchKeys": [
      "PaymentDetails",
      "data class PaymentDetails(val amount: Double, val description: String, val hiddenDescription: String? = null, val language: Language? = null)",
      "com.tpay.sdk.api.screenless.PaymentDetails"
    ]
  },
  {
    "name": "data class PaymentGroup(val id: String, val name: String, val imageUrl: String)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-group/index.html",
    "searchKeys": [
      "PaymentGroup",
      "data class PaymentGroup(val id: String, val name: String, val imageUrl: String)",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup"
    ]
  },
  {
    "name": "data class Recursive(val frequency: Frequency, val quantity: Quantity, val expirationDate: Date)",
    "description": "com.tpay.sdk.api.screenless.card.Recursive",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-recursive/index.html",
    "searchKeys": [
      "Recursive",
      "data class Recursive(val frequency: Frequency, val quantity: Quantity, val expirationDate: Date)",
      "com.tpay.sdk.api.screenless.card.Recursive"
    ]
  },
  {
    "name": "data class Redirects(val successUrl: String, val errorUrl: String)",
    "description": "com.tpay.sdk.api.screenless.Redirects",
    "location": "sdk/com.tpay.sdk.api.screenless/-redirects/index.html",
    "searchKeys": [
      "Redirects",
      "data class Redirects(val successUrl: String, val errorUrl: String)",
      "com.tpay.sdk.api.screenless.Redirects"
    ]
  },
  {
    "name": "data class SingleTransaction(val amount: Double, val description: String, val payerContext: PayerContext, val notifications: Notifications?) : Transaction",
    "description": "com.tpay.sdk.api.models.transaction.SingleTransaction",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-single-transaction/index.html",
    "searchKeys": [
      "SingleTransaction",
      "data class SingleTransaction(val amount: Double, val description: String, val payerContext: PayerContext, val notifications: Notifications?) : Transaction",
      "com.tpay.sdk.api.models.transaction.SingleTransaction"
    ]
  },
  {
    "name": "data class Specified(val value: Int) : Quantity",
    "description": "com.tpay.sdk.api.models.transaction.Quantity.Specified",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-quantity/-specified/index.html",
    "searchKeys": [
      "Specified",
      "data class Specified(val value: Int) : Quantity",
      "com.tpay.sdk.api.models.transaction.Quantity.Specified"
    ]
  },
  {
    "name": "data class Success(val language: String, val currency: String, val channels: List<PaymentChannel>) : GetPaymentChannelsResult",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/-success/index.html",
    "searchKeys": [
      "Success",
      "data class Success(val language: String, val currency: String, val channels: List<PaymentChannel>) : GetPaymentChannelsResult",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success"
    ]
  },
  {
    "name": "data class Success(val token: String, val description: String, val cardNetwork: String, val cardTail: String) : OpenGooglePayResult",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/-success/index.html",
    "searchKeys": [
      "Success",
      "data class Success(val token: String, val description: String, val cardNetwork: String, val cardTail: String) : OpenGooglePayResult",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success"
    ]
  },
  {
    "name": "data class Tokenization(val payer: Payer, val notificationUrl: String) : Parcelable",
    "description": "com.tpay.sdk.api.addCard.Tokenization",
    "location": "sdk/com.tpay.sdk.api.addCard/-tokenization/index.html",
    "searchKeys": [
      "Tokenization",
      "data class Tokenization(val payer: Payer, val notificationUrl: String) : Parcelable",
      "com.tpay.sdk.api.addCard.Tokenization"
    ]
  },
  {
    "name": "data class TokenizedCard(val token: String, val cardTail: String, val brand: CreditCardBrand) : Parcelable",
    "description": "com.tpay.sdk.api.models.TokenizedCard",
    "location": "sdk/com.tpay.sdk.api.models/-tokenized-card/index.html",
    "searchKeys": [
      "TokenizedCard",
      "data class TokenizedCard(val token: String, val cardTail: String, val brand: CreditCardBrand) : Parcelable",
      "com.tpay.sdk.api.models.TokenizedCard"
    ]
  },
  {
    "name": "data class UnexpectedError(val devErrorMessage: String?) : SheetOpenResult",
    "description": "com.tpay.sdk.api.models.SheetOpenResult.UnexpectedError",
    "location": "sdk/com.tpay.sdk.api.models/-sheet-open-result/-unexpected-error/index.html",
    "searchKeys": [
      "UnexpectedError",
      "data class UnexpectedError(val devErrorMessage: String?) : SheetOpenResult",
      "com.tpay.sdk.api.models.SheetOpenResult.UnexpectedError"
    ]
  },
  {
    "name": "data class WalletMethod(val wallet: DigitalWallet, val method: ChannelMethod) : Parcelable",
    "description": "com.tpay.sdk.api.screenless.channelMethods.WalletMethod",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-wallet-method/index.html",
    "searchKeys": [
      "WalletMethod",
      "data class WalletMethod(val wallet: DigitalWallet, val method: ChannelMethod) : Parcelable",
      "com.tpay.sdk.api.screenless.channelMethods.WalletMethod"
    ]
  },
  {
    "name": "data class WebViewConfiguration(val paymentUrl: String, val successUrl: String, val errorUrl: String)",
    "description": "com.tpay.sdk.api.webView.WebViewConfiguration",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-configuration/index.html",
    "searchKeys": [
      "WebViewConfiguration",
      "data class WebViewConfiguration(val paymentUrl: String, val successUrl: String, val errorUrl: String)",
      "com.tpay.sdk.api.webView.WebViewConfiguration"
    ]
  },
  {
    "name": "enum Compatibility : Enum<Compatibility> ",
    "description": "com.tpay.sdk.api.models.Compatibility",
    "location": "sdk/com.tpay.sdk.api.models/-compatibility/index.html",
    "searchKeys": [
      "Compatibility",
      "enum Compatibility : Enum<Compatibility> ",
      "com.tpay.sdk.api.models.Compatibility"
    ]
  },
  {
    "name": "enum CreditCardBrand : Enum<CreditCardBrand> ",
    "description": "com.tpay.sdk.api.paycard.CreditCardBrand",
    "location": "sdk/com.tpay.sdk.api.paycard/-credit-card-brand/index.html",
    "searchKeys": [
      "CreditCardBrand",
      "enum CreditCardBrand : Enum<CreditCardBrand> ",
      "com.tpay.sdk.api.paycard.CreditCardBrand"
    ]
  },
  {
    "name": "enum DigitalWallet : Enum<DigitalWallet> ",
    "description": "com.tpay.sdk.api.models.DigitalWallet",
    "location": "sdk/com.tpay.sdk.api.models/-digital-wallet/index.html",
    "searchKeys": [
      "DigitalWallet",
      "enum DigitalWallet : Enum<DigitalWallet> ",
      "com.tpay.sdk.api.models.DigitalWallet"
    ]
  },
  {
    "name": "enum Environment : Enum<Environment> ",
    "description": "com.tpay.sdk.api.models.Environment",
    "location": "sdk/com.tpay.sdk.api.models/-environment/index.html",
    "searchKeys": [
      "Environment",
      "enum Environment : Enum<Environment> ",
      "com.tpay.sdk.api.models.Environment"
    ]
  },
  {
    "name": "enum Frequency : Enum<Frequency> ",
    "description": "com.tpay.sdk.api.models.transaction.Frequency",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/index.html",
    "searchKeys": [
      "Frequency",
      "enum Frequency : Enum<Frequency> ",
      "com.tpay.sdk.api.models.transaction.Frequency"
    ]
  },
  {
    "name": "enum GooglePayEnvironment : Enum<GooglePayEnvironment> ",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-environment/index.html",
    "searchKeys": [
      "GooglePayEnvironment",
      "enum GooglePayEnvironment : Enum<GooglePayEnvironment> ",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment"
    ]
  },
  {
    "name": "enum InstallmentPayment : Enum<InstallmentPayment> ",
    "description": "com.tpay.sdk.api.models.InstallmentPayment",
    "location": "sdk/com.tpay.sdk.api.models/-installment-payment/index.html",
    "searchKeys": [
      "InstallmentPayment",
      "enum InstallmentPayment : Enum<InstallmentPayment> ",
      "com.tpay.sdk.api.models.InstallmentPayment"
    ]
  },
  {
    "name": "enum Language : Enum<Language> ",
    "description": "com.tpay.sdk.api.models.Language",
    "location": "sdk/com.tpay.sdk.api.models/-language/index.html",
    "searchKeys": [
      "Language",
      "enum Language : Enum<Language> ",
      "com.tpay.sdk.api.models.Language"
    ]
  },
  {
    "name": "enum TransactionState : Enum<TransactionState> ",
    "description": "com.tpay.sdk.api.screenless.TransactionState",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/index.html",
    "searchKeys": [
      "TransactionState",
      "enum TransactionState : Enum<TransactionState> ",
      "com.tpay.sdk.api.screenless.TransactionState"
    ]
  },
  {
    "name": "fun AccessToken(token: String, validForSeconds: Int)",
    "description": "com.tpay.sdk.server.AccessToken.AccessToken",
    "location": "sdk/com.tpay.sdk.server/-access-token/-access-token.html",
    "searchKeys": [
      "AccessToken",
      "fun AccessToken(token: String, validForSeconds: Int)",
      "com.tpay.sdk.server.AccessToken.AccessToken"
    ]
  },
  {
    "name": "fun Address(address: String?, city: String?, countryCode: String?, postalCode: String?)",
    "description": "com.tpay.sdk.api.models.payer.Payer.Address.Address",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/-address/-address.html",
    "searchKeys": [
      "Address",
      "fun Address(address: String?, city: String?, countryCode: String?, postalCode: String?)",
      "com.tpay.sdk.api.models.payer.Payer.Address.Address"
    ]
  },
  {
    "name": "fun AmbiguousAlias(name: String, code: String)",
    "description": "com.tpay.sdk.api.screenless.blik.AmbiguousAlias.AmbiguousAlias",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-ambiguous-alias/-ambiguous-alias.html",
    "searchKeys": [
      "AmbiguousAlias",
      "fun AmbiguousAlias(name: String, code: String)",
      "com.tpay.sdk.api.screenless.blik.AmbiguousAlias.AmbiguousAlias"
    ]
  },
  {
    "name": "fun AmbiguousBlikAlias(transactionId: String, aliases: List<AmbiguousAlias>)",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.AmbiguousBlikAlias.AmbiguousBlikAlias",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-ambiguous-blik-alias/-ambiguous-blik-alias.html",
    "searchKeys": [
      "AmbiguousBlikAlias",
      "fun AmbiguousBlikAlias(transactionId: String, aliases: List<AmbiguousAlias>)",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.AmbiguousBlikAlias.AmbiguousBlikAlias"
    ]
  },
  {
    "name": "fun AmbiguousBlikAliasDTO(json: String)",
    "description": "com.tpay.sdk.server.dto.parts.AmbiguousBlikAliasDTO.AmbiguousBlikAliasDTO",
    "location": "sdk/com.tpay.sdk.server.dto.parts/-ambiguous-blik-alias-d-t-o/-ambiguous-blik-alias-d-t-o.html",
    "searchKeys": [
      "AmbiguousBlikAliasDTO",
      "fun AmbiguousBlikAliasDTO(json: String)",
      "com.tpay.sdk.server.dto.parts.AmbiguousBlikAliasDTO.AmbiguousBlikAliasDTO"
    ]
  },
  {
    "name": "fun Amount(minimum: Double?, maximum: Double?)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount.Amount",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-constraint/-amount/-amount.html",
    "searchKeys": [
      "Amount",
      "fun Amount(minimum: Double?, maximum: Double?)",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount.Amount"
    ]
  },
  {
    "name": "fun Authorization(clientId: String, clientSecret: String)",
    "description": "com.tpay.sdk.api.models.merchant.Merchant.Authorization.Authorization",
    "location": "sdk/com.tpay.sdk.api.models.merchant/-merchant/-authorization/-authorization.html",
    "searchKeys": [
      "Authorization",
      "fun Authorization(clientId: String, clientSecret: String)",
      "com.tpay.sdk.api.models.merchant.Merchant.Authorization.Authorization"
    ]
  },
  {
    "name": "fun AutomaticPaymentMethods(blikAlias: BlikAlias? = null, tokenizedCards: List<TokenizedCard> = emptyList())",
    "description": "com.tpay.sdk.api.models.AutomaticPaymentMethods.AutomaticPaymentMethods",
    "location": "sdk/com.tpay.sdk.api.models/-automatic-payment-methods/-automatic-payment-methods.html",
    "searchKeys": [
      "AutomaticPaymentMethods",
      "fun AutomaticPaymentMethods(blikAlias: BlikAlias? = null, tokenizedCards: List<TokenizedCard> = emptyList())",
      "com.tpay.sdk.api.models.AutomaticPaymentMethods.AutomaticPaymentMethods"
    ]
  },
  {
    "name": "fun AvailablePaymentMethods(creditCardMethod: ChannelMethod?, blikMethod: ChannelMethod?, availableTransfers: List<ChannelMethod>, availableWallets: List<WalletMethod>, availablePekaoInstallmentMethods: List<ChannelMethod>, payPoMethod: ChannelMethod?)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.AvailablePaymentMethods",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/-available-payment-methods.html",
    "searchKeys": [
      "AvailablePaymentMethods",
      "fun AvailablePaymentMethods(creditCardMethod: ChannelMethod?, blikMethod: ChannelMethod?, availableTransfers: List<ChannelMethod>, availableWallets: List<WalletMethod>, availablePekaoInstallmentMethods: List<ChannelMethod>, payPoMethod: ChannelMethod?)",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.AvailablePaymentMethods"
    ]
  },
  {
    "name": "fun Builder()",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/-builder.html",
    "searchKeys": [
      "Builder",
      "fun Builder()",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.Builder"
    ]
  },
  {
    "name": "fun Builder()",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/-builder.html",
    "searchKeys": [
      "Builder",
      "fun Builder()",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.Builder"
    ]
  },
  {
    "name": "fun Builder()",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/-builder/-builder.html",
    "searchKeys": [
      "Builder",
      "fun Builder()",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.Builder"
    ]
  },
  {
    "name": "fun Builder()",
    "description": "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-pay-po-payment/-builder/-builder.html",
    "searchKeys": [
      "Builder",
      "fun Builder()",
      "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.Builder"
    ]
  },
  {
    "name": "fun Builder()",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/-builder/-builder.html",
    "searchKeys": [
      "Builder",
      "fun Builder()",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.Builder"
    ]
  },
  {
    "name": "fun Builder()",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.Builder",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/-builder/-builder.html",
    "searchKeys": [
      "Builder",
      "fun Builder()",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.Builder"
    ]
  },
  {
    "name": "fun CardTokenTransaction(amount: Double, description: String, payer: Payer, cardToken: String, notifications: Notifications?)",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.CardTokenTransaction",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-transaction/-card-token-transaction.html",
    "searchKeys": [
      "CardTokenTransaction",
      "fun CardTokenTransaction(amount: Double, description: String, payer: Payer, cardToken: String, notifications: Notifications?)",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.CardTokenTransaction"
    ]
  },
  {
    "name": "fun CertificatePinningConfiguration(publicKeyHash: String)",
    "description": "com.tpay.sdk.api.models.CertificatePinningConfiguration.CertificatePinningConfiguration",
    "location": "sdk/com.tpay.sdk.api.models/-certificate-pinning-configuration/-certificate-pinning-configuration.html",
    "searchKeys": [
      "CertificatePinningConfiguration",
      "fun CertificatePinningConfiguration(publicKeyHash: String)",
      "com.tpay.sdk.api.models.CertificatePinningConfiguration.CertificatePinningConfiguration"
    ]
  },
  {
    "name": "fun ChannelMethod(channelId: Int, name: String, imageUrl: String)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod.ChannelMethod",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-channel-method/-channel-method.html",
    "searchKeys": [
      "ChannelMethod",
      "fun ChannelMethod(channelId: Int, name: String, imageUrl: String)",
      "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod.ChannelMethod"
    ]
  },
  {
    "name": "fun ConfigurationInvalid(devMessage: String)",
    "description": "com.tpay.sdk.api.models.SheetOpenResult.ConfigurationInvalid.ConfigurationInvalid",
    "location": "sdk/com.tpay.sdk.api.models/-sheet-open-result/-configuration-invalid/-configuration-invalid.html",
    "searchKeys": [
      "ConfigurationInvalid",
      "fun ConfigurationInvalid(devMessage: String)",
      "com.tpay.sdk.api.models.SheetOpenResult.ConfigurationInvalid.ConfigurationInvalid"
    ]
  },
  {
    "name": "fun ConfiguredPaymentFailed(transactionId: String, errorMessage: String?)",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.ConfiguredPaymentFailed.ConfiguredPaymentFailed",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-configured-payment-failed/-configured-payment-failed.html",
    "searchKeys": [
      "ConfiguredPaymentFailed",
      "fun ConfiguredPaymentFailed(transactionId: String, errorMessage: String?)",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.ConfiguredPaymentFailed.ConfiguredPaymentFailed"
    ]
  },
  {
    "name": "fun Created(transactionId: String)",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Created.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-created/-created.html",
    "searchKeys": [
      "Created",
      "fun Created(transactionId: String)",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Created.Created"
    ]
  },
  {
    "name": "fun Created(transactionId: String, paymentUrl: String)",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Created.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-created/-created.html",
    "searchKeys": [
      "Created",
      "fun Created(transactionId: String, paymentUrl: String)",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Created.Created"
    ]
  },
  {
    "name": "fun Created(transactionId: String, paymentUrl: String)",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Created.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-created/-created.html",
    "searchKeys": [
      "Created",
      "fun Created(transactionId: String, paymentUrl: String)",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Created.Created"
    ]
  },
  {
    "name": "fun Created(transactionId: String, paymentUrl: String)",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Created.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/-created/-created.html",
    "searchKeys": [
      "Created",
      "fun Created(transactionId: String, paymentUrl: String)",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Created.Created"
    ]
  },
  {
    "name": "fun Created(transactionId: String, paymentUrl: String)",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Created.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/-created/-created.html",
    "searchKeys": [
      "Created",
      "fun Created(transactionId: String, paymentUrl: String)",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Created.Created"
    ]
  },
  {
    "name": "fun Created(transactionId: String, paymentUrl: String)",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Created.Created",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/-created/-created.html",
    "searchKeys": [
      "Created",
      "fun Created(transactionId: String, paymentUrl: String)",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Created.Created"
    ]
  },
  {
    "name": "fun CreatedAndPaid(transactionId: String)",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.CreatedAndPaid.CreatedAndPaid",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-created-and-paid/-created-and-paid.html",
    "searchKeys": [
      "CreatedAndPaid",
      "fun CreatedAndPaid(transactionId: String)",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.CreatedAndPaid.CreatedAndPaid"
    ]
  },
  {
    "name": "fun CreatedAndPaid(transactionId: String)",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.CreatedAndPaid.CreatedAndPaid",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-created-and-paid/-created-and-paid.html",
    "searchKeys": [
      "CreatedAndPaid",
      "fun CreatedAndPaid(transactionId: String)",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.CreatedAndPaid.CreatedAndPaid"
    ]
  },
  {
    "name": "fun CreatedAndPaid(transactionId: String)",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.CreatedAndPaid.CreatedAndPaid",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-created-and-paid/-created-and-paid.html",
    "searchKeys": [
      "CreatedAndPaid",
      "fun CreatedAndPaid(transactionId: String)",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.CreatedAndPaid.CreatedAndPaid"
    ]
  },
  {
    "name": "fun CreditCard(cardNumber: String, expirationDate: String, cvv: String)",
    "description": "com.tpay.sdk.api.screenless.card.CreditCard.CreditCard",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card/-credit-card.html",
    "searchKeys": [
      "CreditCard",
      "fun CreditCard(cardNumber: String, expirationDate: String, cvv: String)",
      "com.tpay.sdk.api.screenless.card.CreditCard.CreditCard"
    ]
  },
  {
    "name": "fun DigitalWallets(wallets: List<DigitalWallet>)",
    "description": "com.tpay.sdk.api.models.PaymentMethod.DigitalWallets.DigitalWallets",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-digital-wallets/-digital-wallets.html",
    "searchKeys": [
      "DigitalWallets",
      "fun DigitalWallets(wallets: List<DigitalWallet>)",
      "com.tpay.sdk.api.models.PaymentMethod.DigitalWallets.DigitalWallets"
    ]
  },
  {
    "name": "fun Error(devErrorMessage: String?)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Error.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/-error/-error.html",
    "searchKeys": [
      "Error",
      "fun Error(devErrorMessage: String?)",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Error.Error"
    ]
  },
  {
    "name": "fun Error(devErrorMessage: String?, transactionId: String? = null)",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Error.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/-error/-error.html",
    "searchKeys": [
      "Error",
      "fun Error(devErrorMessage: String?, transactionId: String? = null)",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Error.Error"
    ]
  },
  {
    "name": "fun Error(devErrorMessage: String?, transactionId: String? = null)",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Error.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/-error/-error.html",
    "searchKeys": [
      "Error",
      "fun Error(devErrorMessage: String?, transactionId: String? = null)",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Error.Error"
    ]
  },
  {
    "name": "fun Error(errorMessage: String?, transactionId: String? = null)",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Error.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-error/-error.html",
    "searchKeys": [
      "Error",
      "fun Error(errorMessage: String?, transactionId: String? = null)",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Error.Error"
    ]
  },
  {
    "name": "fun Error(errorMessage: String?, transactionId: String? = null)",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Error.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-error/-error.html",
    "searchKeys": [
      "Error",
      "fun Error(errorMessage: String?, transactionId: String? = null)",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Error.Error"
    ]
  },
  {
    "name": "fun Error(errorMessage: String?, transactionId: String? = null)",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Error.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-error/-error.html",
    "searchKeys": [
      "Error",
      "fun Error(errorMessage: String?, transactionId: String? = null)",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Error.Error"
    ]
  },
  {
    "name": "fun Error(errorMessage: String?, transactionId: String? = null)",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Error.Error",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/-error/-error.html",
    "searchKeys": [
      "Error",
      "fun Error(errorMessage: String?, transactionId: String? = null)",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Error.Error"
    ]
  },
  {
    "name": "fun GetPaymentChannels()",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannels.GetPaymentChannels",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels/-get-payment-channels.html",
    "searchKeys": [
      "GetPaymentChannels",
      "fun GetPaymentChannels()",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannels.GetPaymentChannels"
    ]
  },
  {
    "name": "fun GooglePayConfiguration(merchantId: String)",
    "description": "com.tpay.sdk.api.models.GooglePayConfiguration.GooglePayConfiguration",
    "location": "sdk/com.tpay.sdk.api.models/-google-pay-configuration/-google-pay-configuration.html",
    "searchKeys": [
      "GooglePayConfiguration",
      "fun GooglePayConfiguration(merchantId: String)",
      "com.tpay.sdk.api.models.GooglePayConfiguration.GooglePayConfiguration"
    ]
  },
  {
    "name": "fun GooglePayRequest(price: Double, merchantName: String, merchantId: String)",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayRequest.GooglePayRequest",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-request/-google-pay-request.html",
    "searchKeys": [
      "GooglePayRequest",
      "fun GooglePayRequest(price: Double, merchantName: String, merchantId: String)",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayRequest.GooglePayRequest"
    ]
  },
  {
    "name": "fun GooglePayUtil(activity: Activity, googlePayRequest: GooglePayRequest, googlePayEnvironment: GooglePayEnvironment = GooglePayEnvironment.PRODUCTION, customRequestCode: Int? = null)",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.GooglePayUtil",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-util/-google-pay-util.html",
    "searchKeys": [
      "GooglePayUtil",
      "fun GooglePayUtil(activity: Activity, googlePayRequest: GooglePayRequest, googlePayEnvironment: GooglePayEnvironment = GooglePayEnvironment.PRODUCTION, customRequestCode: Int? = null)",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.GooglePayUtil"
    ]
  },
  {
    "name": "fun GroupedPaymentChannels(creditCardChannel: PaymentChannel?, blikChannel: PaymentChannel?, transferChannels: List<PaymentChannel>, walletChannels: List<PaymentChannel>, installmentPayments: List<InstallmentPaymentKind>)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.GroupedPaymentChannels",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/-grouped-payment-channels.html",
    "searchKeys": [
      "GroupedPaymentChannels",
      "fun GroupedPaymentChannels(creditCardChannel: PaymentChannel?, blikChannel: PaymentChannel?, transferChannels: List<PaymentChannel>, walletChannels: List<PaymentChannel>, installmentPayments: List<InstallmentPaymentKind>)",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.GroupedPaymentChannels"
    ]
  },
  {
    "name": "fun ImageDTO(json: JSONObject)",
    "description": "com.tpay.sdk.server.dto.parts.ImageDTO.ImageDTO",
    "location": "sdk/com.tpay.sdk.server.dto.parts/-image-d-t-o/-image-d-t-o.html",
    "searchKeys": [
      "ImageDTO",
      "fun ImageDTO(json: JSONObject)",
      "com.tpay.sdk.server.dto.parts.ImageDTO.ImageDTO"
    ]
  },
  {
    "name": "fun InstallmentPaymentKind(installmentPayment: InstallmentPayment, channels: List<PaymentChannel>)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.InstallmentPaymentKind.InstallmentPaymentKind",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-installment-payment-kind/-installment-payment-kind.html",
    "searchKeys": [
      "InstallmentPaymentKind",
      "fun InstallmentPaymentKind(installmentPayment: InstallmentPayment, channels: List<PaymentChannel>)",
      "com.tpay.sdk.api.screenless.channelMethods.InstallmentPaymentKind.InstallmentPaymentKind"
    ]
  },
  {
    "name": "fun InstallmentPayments(methods: List<InstallmentPayment>)",
    "description": "com.tpay.sdk.api.models.PaymentMethod.InstallmentPayments.InstallmentPayments",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-installment-payments/-installment-payments.html",
    "searchKeys": [
      "InstallmentPayments",
      "fun InstallmentPayments(methods: List<InstallmentPayment>)",
      "com.tpay.sdk.api.models.PaymentMethod.InstallmentPayments.InstallmentPayments"
    ]
  },
  {
    "name": "fun Invalid(error: ModuleError.ConfigurationError)",
    "description": "com.tpay.sdk.api.models.ConfigurationCheckResult.Invalid.Invalid",
    "location": "sdk/com.tpay.sdk.api.models/-configuration-check-result/-invalid/-invalid.html",
    "searchKeys": [
      "Invalid",
      "fun Invalid(error: ModuleError.ConfigurationError)",
      "com.tpay.sdk.api.models.ConfigurationCheckResult.Invalid.Invalid"
    ]
  },
  {
    "name": "fun Invalid(message: String)",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult.Invalid.Invalid",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/-invalid/-invalid.html",
    "searchKeys": [
      "Invalid",
      "fun Invalid(message: String)",
      "com.tpay.sdk.api.webView.WebViewCheckResult.Invalid.Invalid"
    ]
  },
  {
    "name": "fun JSONObject.actuallyOptString(key: String): String?",
    "description": "com.tpay.sdk.extensions.actuallyOptString",
    "location": "sdk/com.tpay.sdk.extensions/actually-opt-string.html",
    "searchKeys": [
      "actuallyOptString",
      "fun JSONObject.actuallyOptString(key: String): String?",
      "com.tpay.sdk.extensions.actuallyOptString"
    ]
  },
  {
    "name": "fun LongPolling()",
    "description": "com.tpay.sdk.api.screenless.LongPolling.LongPolling",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling/-long-polling.html",
    "searchKeys": [
      "LongPolling",
      "fun LongPolling()",
      "com.tpay.sdk.api.screenless.LongPolling.LongPolling"
    ]
  },
  {
    "name": "fun LongPollingConfig(delayMillis: Long, maxRequestCount: Int? = null, stopOnFirstRequestError: Boolean = false, onTransactionState: (TransactionState) -> Unit, onRequestError: (Exception) -> Unit, onMaxRequestCount: () -> Unit = { })",
    "description": "com.tpay.sdk.api.screenless.LongPollingConfig.LongPollingConfig",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling-config/-long-polling-config.html",
    "searchKeys": [
      "LongPollingConfig",
      "fun LongPollingConfig(delayMillis: Long, maxRequestCount: Int? = null, stopOnFirstRequestError: Boolean = false, onTransactionState: (TransactionState) -> Unit, onRequestError: (Exception) -> Unit, onMaxRequestCount: () -> Unit = { })",
      "com.tpay.sdk.api.screenless.LongPollingConfig.LongPollingConfig"
    ]
  },
  {
    "name": "fun Merchant(authorization: Merchant.Authorization)",
    "description": "com.tpay.sdk.api.models.merchant.Merchant.Merchant",
    "location": "sdk/com.tpay.sdk.api.models.merchant/-merchant/-merchant.html",
    "searchKeys": [
      "Merchant",
      "fun Merchant(authorization: Merchant.Authorization)",
      "com.tpay.sdk.api.models.merchant.Merchant.Merchant"
    ]
  },
  {
    "name": "fun NotRegistered(value: String, label: String? = null)",
    "description": "com.tpay.sdk.api.models.BlikAlias.NotRegistered.NotRegistered",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/-not-registered/-not-registered.html",
    "searchKeys": [
      "NotRegistered",
      "fun NotRegistered(value: String, label: String? = null)",
      "com.tpay.sdk.api.models.BlikAlias.NotRegistered.NotRegistered"
    ]
  },
  {
    "name": "fun Notifications(notificationUrl: String, notificationEmail: String)",
    "description": "com.tpay.sdk.api.screenless.Notifications.Notifications",
    "location": "sdk/com.tpay.sdk.api.screenless/-notifications/-notifications.html",
    "searchKeys": [
      "Notifications",
      "fun Notifications(notificationUrl: String, notificationEmail: String)",
      "com.tpay.sdk.api.screenless.Notifications.Notifications"
    ]
  },
  {
    "name": "fun Parcel.readStringOrThrow(): String",
    "description": "com.tpay.sdk.extensions.readStringOrThrow",
    "location": "sdk/com.tpay.sdk.extensions/read-string-or-throw.html",
    "searchKeys": [
      "readStringOrThrow",
      "fun Parcel.readStringOrThrow(): String",
      "com.tpay.sdk.extensions.readStringOrThrow"
    ]
  },
  {
    "name": "fun PayButton(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0)",
    "description": "com.tpay.sdk.PayButton.PayButton",
    "location": "sdk/com.tpay.sdk/-pay-button/-pay-button.html",
    "searchKeys": [
      "PayButton",
      "fun PayButton(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0)",
      "com.tpay.sdk.PayButton.PayButton"
    ]
  },
  {
    "name": "fun PayCardEncryptor(publicKeyHash: String)",
    "description": "com.tpay.sdk.api.PayCardEncryptor.PayCardEncryptor",
    "location": "sdk/com.tpay.sdk.api/-pay-card-encryptor/-pay-card-encryptor.html",
    "searchKeys": [
      "PayCardEncryptor",
      "fun PayCardEncryptor(publicKeyHash: String)",
      "com.tpay.sdk.api.PayCardEncryptor.PayCardEncryptor"
    ]
  },
  {
    "name": "fun Payer(name: String, email: String, phone: String?, address: Payer.Address?)",
    "description": "com.tpay.sdk.api.models.payer.Payer.Payer",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/-payer.html",
    "searchKeys": [
      "Payer",
      "fun Payer(name: String, email: String, phone: String?, address: Payer.Address?)",
      "com.tpay.sdk.api.models.payer.Payer.Payer"
    ]
  },
  {
    "name": "fun PayerContext(payer: Payer, automaticPaymentMethods: AutomaticPaymentMethods? = null)",
    "description": "com.tpay.sdk.api.models.PayerContext.PayerContext",
    "location": "sdk/com.tpay.sdk.api.models/-payer-context/-payer-context.html",
    "searchKeys": [
      "PayerContext",
      "fun PayerContext(payer: Payer, automaticPaymentMethods: AutomaticPaymentMethods? = null)",
      "com.tpay.sdk.api.models.PayerContext.PayerContext"
    ]
  },
  {
    "name": "fun Payment()",
    "description": "com.tpay.sdk.api.screenless.Payment.Payment",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment/-payment.html",
    "searchKeys": [
      "Payment",
      "fun Payment()",
      "com.tpay.sdk.api.screenless.Payment.Payment"
    ]
  },
  {
    "name": "fun PaymentBuilder()",
    "description": "com.tpay.sdk.api.screenless.PaymentBuilder.PaymentBuilder",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-builder/-payment-builder.html",
    "searchKeys": [
      "PaymentBuilder",
      "fun PaymentBuilder()",
      "com.tpay.sdk.api.screenless.PaymentBuilder.PaymentBuilder"
    ]
  },
  {
    "name": "fun PaymentChannel(id: String, name: String, imageUrl: String, isAvailable: Boolean, isOnline: Boolean, isInstantRedirectionAvailable: Boolean, groups: List<PaymentGroup>, constraints: List<PaymentConstraint>)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.PaymentChannel",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/-payment-channel.html",
    "searchKeys": [
      "PaymentChannel",
      "fun PaymentChannel(id: String, name: String, imageUrl: String, isAvailable: Boolean, isOnline: Boolean, isInstantRedirectionAvailable: Boolean, groups: List<PaymentGroup>, constraints: List<PaymentConstraint>)",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.PaymentChannel"
    ]
  },
  {
    "name": "fun PaymentDetails(amount: Double, description: String, hiddenDescription: String? = null, language: Language? = null)",
    "description": "com.tpay.sdk.api.screenless.PaymentDetails.PaymentDetails",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-details/-payment-details.html",
    "searchKeys": [
      "PaymentDetails",
      "fun PaymentDetails(amount: Double, description: String, hiddenDescription: String? = null, language: Language? = null)",
      "com.tpay.sdk.api.screenless.PaymentDetails.PaymentDetails"
    ]
  },
  {
    "name": "fun PaymentGroup(id: String, name: String, imageUrl: String)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup.PaymentGroup",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-group/-payment-group.html",
    "searchKeys": [
      "PaymentGroup",
      "fun PaymentGroup(id: String, name: String, imageUrl: String)",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup.PaymentGroup"
    ]
  },
  {
    "name": "fun Recursive(frequency: Frequency, quantity: Quantity, expirationDate: Date)",
    "description": "com.tpay.sdk.api.screenless.card.Recursive.Recursive",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-recursive/-recursive.html",
    "searchKeys": [
      "Recursive",
      "fun Recursive(frequency: Frequency, quantity: Quantity, expirationDate: Date)",
      "com.tpay.sdk.api.screenless.card.Recursive.Recursive"
    ]
  },
  {
    "name": "fun Redirects(successUrl: String, errorUrl: String)",
    "description": "com.tpay.sdk.api.screenless.Redirects.Redirects",
    "location": "sdk/com.tpay.sdk.api.screenless/-redirects/-redirects.html",
    "searchKeys": [
      "Redirects",
      "fun Redirects(successUrl: String, errorUrl: String)",
      "com.tpay.sdk.api.screenless.Redirects.Redirects"
    ]
  },
  {
    "name": "fun Registered(value: String, label: String? = null)",
    "description": "com.tpay.sdk.api.models.BlikAlias.Registered.Registered",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/-registered/-registered.html",
    "searchKeys": [
      "Registered",
      "fun Registered(value: String, label: String? = null)",
      "com.tpay.sdk.api.models.BlikAlias.Registered.Registered"
    ]
  },
  {
    "name": "fun Sheet(tokenization: Tokenization, activity: Activity, supportFragmentManager: FragmentManager)",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet.Sheet",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/-sheet.html",
    "searchKeys": [
      "Sheet",
      "fun Sheet(tokenization: Tokenization, activity: Activity, supportFragmentManager: FragmentManager)",
      "com.tpay.sdk.api.addCard.AddCard.Sheet.Sheet"
    ]
  },
  {
    "name": "fun Sheet(transaction: CardTokenTransaction, activity: Activity, supportFragmentManager: FragmentManager)",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.Sheet",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/-sheet.html",
    "searchKeys": [
      "Sheet",
      "fun Sheet(transaction: CardTokenTransaction, activity: Activity, supportFragmentManager: FragmentManager)",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.Sheet"
    ]
  },
  {
    "name": "fun Sheet(transaction: Transaction, activity: Activity, supportFragmentManager: FragmentManager)",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.Sheet",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/-sheet.html",
    "searchKeys": [
      "Sheet",
      "fun Sheet(transaction: Transaction, activity: Activity, supportFragmentManager: FragmentManager)",
      "com.tpay.sdk.api.payment.Payment.Sheet.Sheet"
    ]
  },
  {
    "name": "fun Sheet(webViewConfiguration: WebViewConfiguration, activity: Activity, supportFragmentManager: FragmentManager)",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.Sheet",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/-sheet.html",
    "searchKeys": [
      "Sheet",
      "fun Sheet(webViewConfiguration: WebViewConfiguration, activity: Activity, supportFragmentManager: FragmentManager)",
      "com.tpay.sdk.api.webView.WebView.Sheet.Sheet"
    ]
  },
  {
    "name": "fun SingleTransaction(amount: Double, description: String, payerContext: PayerContext, notifications: Notifications?)",
    "description": "com.tpay.sdk.api.models.transaction.SingleTransaction.SingleTransaction",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-single-transaction/-single-transaction.html",
    "searchKeys": [
      "SingleTransaction",
      "fun SingleTransaction(amount: Double, description: String, payerContext: PayerContext, notifications: Notifications?)",
      "com.tpay.sdk.api.models.transaction.SingleTransaction.SingleTransaction"
    ]
  },
  {
    "name": "fun Specified(value: Int)",
    "description": "com.tpay.sdk.api.models.transaction.Quantity.Specified.Specified",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-quantity/-specified/-specified.html",
    "searchKeys": [
      "Specified",
      "fun Specified(value: Int)",
      "com.tpay.sdk.api.models.transaction.Quantity.Specified.Specified"
    ]
  },
  {
    "name": "fun Success(language: String, currency: String, channels: List<PaymentChannel>)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success.Success",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/-success/-success.html",
    "searchKeys": [
      "Success",
      "fun Success(language: String, currency: String, channels: List<PaymentChannel>)",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success.Success"
    ]
  },
  {
    "name": "fun Success(token: String, description: String, cardNetwork: String, cardTail: String)",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.Success",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/-success/-success.html",
    "searchKeys": [
      "Success",
      "fun Success(token: String, description: String, cardNetwork: String, cardTail: String)",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.Success"
    ]
  },
  {
    "name": "fun Tokenization(payer: Payer, notificationUrl: String)",
    "description": "com.tpay.sdk.api.addCard.Tokenization.Tokenization",
    "location": "sdk/com.tpay.sdk.api.addCard/-tokenization/-tokenization.html",
    "searchKeys": [
      "Tokenization",
      "fun Tokenization(payer: Payer, notificationUrl: String)",
      "com.tpay.sdk.api.addCard.Tokenization.Tokenization"
    ]
  },
  {
    "name": "fun TokenizedCard(token: String, cardTail: String, brand: CreditCardBrand)",
    "description": "com.tpay.sdk.api.models.TokenizedCard.TokenizedCard",
    "location": "sdk/com.tpay.sdk.api.models/-tokenized-card/-tokenized-card.html",
    "searchKeys": [
      "TokenizedCard",
      "fun TokenizedCard(token: String, cardTail: String, brand: CreditCardBrand)",
      "com.tpay.sdk.api.models.TokenizedCard.TokenizedCard"
    ]
  },
  {
    "name": "fun UnexpectedError(devErrorMessage: String?)",
    "description": "com.tpay.sdk.api.models.SheetOpenResult.UnexpectedError.UnexpectedError",
    "location": "sdk/com.tpay.sdk.api.models/-sheet-open-result/-unexpected-error/-unexpected-error.html",
    "searchKeys": [
      "UnexpectedError",
      "fun UnexpectedError(devErrorMessage: String?)",
      "com.tpay.sdk.api.models.SheetOpenResult.UnexpectedError.UnexpectedError"
    ]
  },
  {
    "name": "fun WalletMethod(wallet: DigitalWallet, method: ChannelMethod)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.WalletMethod.WalletMethod",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-wallet-method/-wallet-method.html",
    "searchKeys": [
      "WalletMethod",
      "fun WalletMethod(wallet: DigitalWallet, method: ChannelMethod)",
      "com.tpay.sdk.api.screenless.channelMethods.WalletMethod.WalletMethod"
    ]
  },
  {
    "name": "fun WebView()",
    "description": "com.tpay.sdk.api.webView.WebView.WebView",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-web-view.html",
    "searchKeys": [
      "WebView",
      "fun WebView()",
      "com.tpay.sdk.api.webView.WebView.WebView"
    ]
  },
  {
    "name": "fun WebViewConfiguration(paymentUrl: String, successUrl: String, errorUrl: String)",
    "description": "com.tpay.sdk.api.webView.WebViewConfiguration.WebViewConfiguration",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-configuration/-web-view-configuration.html",
    "searchKeys": [
      "WebViewConfiguration",
      "fun WebViewConfiguration(paymentUrl: String, successUrl: String, errorUrl: String)",
      "com.tpay.sdk.api.webView.WebViewConfiguration.WebViewConfiguration"
    ]
  },
  {
    "name": "fun addObserver(addCardDelegate: AddCardDelegate)",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet.addObserver",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/add-observer.html",
    "searchKeys": [
      "addObserver",
      "fun addObserver(addCardDelegate: AddCardDelegate)",
      "com.tpay.sdk.api.addCard.AddCard.Sheet.addObserver"
    ]
  },
  {
    "name": "fun check(): WebViewCheckResult",
    "description": "com.tpay.sdk.api.webView.WebViewConfiguration.check",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-configuration/check.html",
    "searchKeys": [
      "check",
      "fun check(): WebViewCheckResult",
      "com.tpay.sdk.api.webView.WebViewConfiguration.check"
    ]
  },
  {
    "name": "fun check(amount: Double): Boolean",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount.check",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-constraint/-amount/check.html",
    "searchKeys": [
      "check",
      "fun check(amount: Double): Boolean",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount.check"
    ]
  },
  {
    "name": "fun checkIfGooglePayIsAvailable(result: (Boolean) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.checkIfGooglePayIsAvailable",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-util/check-if-google-pay-is-available.html",
    "searchKeys": [
      "checkIfGooglePayIsAvailable",
      "fun checkIfGooglePayIsAvailable(result: (Boolean) -> Unit)",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.checkIfGooglePayIsAvailable"
    ]
  },
  {
    "name": "fun configure(compatibility: Compatibility): TpayModule.Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/configure.html",
    "searchKeys": [
      "configure",
      "fun configure(compatibility: Compatibility): TpayModule.Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure"
    ]
  },
  {
    "name": "fun configure(environment: Environment): TpayModule.Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/configure.html",
    "searchKeys": [
      "configure",
      "fun configure(environment: Environment): TpayModule.Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure"
    ]
  },
  {
    "name": "fun configure(googlePayConfiguration: GooglePayConfiguration): TpayModule.Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/configure.html",
    "searchKeys": [
      "configure",
      "fun configure(googlePayConfiguration: GooglePayConfiguration): TpayModule.Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure"
    ]
  },
  {
    "name": "fun configure(merchant: Merchant): TpayModule.Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/configure.html",
    "searchKeys": [
      "configure",
      "fun configure(merchant: Merchant): TpayModule.Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure"
    ]
  },
  {
    "name": "fun configure(merchantDetailsProvider: MerchantDetailsProvider): TpayModule.Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/configure.html",
    "searchKeys": [
      "configure",
      "fun configure(merchantDetailsProvider: MerchantDetailsProvider): TpayModule.Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure"
    ]
  },
  {
    "name": "fun configure(paymentMethods: List<PaymentMethod>): TpayModule.Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/configure.html",
    "searchKeys": [
      "configure",
      "fun configure(paymentMethods: List<PaymentMethod>): TpayModule.Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure"
    ]
  },
  {
    "name": "fun configure(preferredLanguage: Language, supportedLanguages: List<Language> = Language.values().toList()): TpayModule.Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/configure.html",
    "searchKeys": [
      "configure",
      "fun configure(preferredLanguage: Language, supportedLanguages: List<Language> = Language.values().toList()): TpayModule.Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure"
    ]
  },
  {
    "name": "fun configure(sslCertificatesProvider: SSLCertificatesProvider): TpayModule.Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/configure.html",
    "searchKeys": [
      "configure",
      "fun configure(sslCertificatesProvider: SSLCertificatesProvider): TpayModule.Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion.configure"
    ]
  },
  {
    "name": "fun contains(wallet: DigitalWallet): Boolean",
    "description": "com.tpay.sdk.api.models.PaymentMethod.DigitalWallets.contains",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-digital-wallets/contains.html",
    "searchKeys": [
      "contains",
      "fun contains(wallet: DigitalWallet): Boolean",
      "com.tpay.sdk.api.models.PaymentMethod.DigitalWallets.contains"
    ]
  },
  {
    "name": "fun encrypt(cardNumber: String, expirationDate: String, cvv: String, domain: String): String",
    "description": "com.tpay.sdk.api.PayCardEncryptor.encrypt",
    "location": "sdk/com.tpay.sdk.api/-pay-card-encryptor/encrypt.html",
    "searchKeys": [
      "encrypt",
      "fun encrypt(cardNumber: String, expirationDate: String, cvv: String, domain: String): String",
      "com.tpay.sdk.api.PayCardEncryptor.encrypt"
    ]
  },
  {
    "name": "fun execute(onResult: (GetPaymentChannelsResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannels.execute",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels/execute.html",
    "searchKeys": [
      "execute",
      "fun execute(onResult: (GetPaymentChannelsResult) -> Unit)",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannels.execute"
    ]
  },
  {
    "name": "fun from(channels: List<PaymentChannel>, ignoreUnsupported: Boolean = true): GroupedPaymentChannels",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.Companion.from",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/-companion/from.html",
    "searchKeys": [
      "from",
      "fun from(channels: List<PaymentChannel>, ignoreUnsupported: Boolean = true): GroupedPaymentChannels",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.Companion.from"
    ]
  },
  {
    "name": "fun from(grouped: GroupedPaymentChannels, methods: List<PaymentMethod>, amount: Double): AvailablePaymentMethods",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.Companion.from",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/-companion/from.html",
    "searchKeys": [
      "from",
      "fun from(grouped: GroupedPaymentChannels, methods: List<PaymentMethod>, amount: Double): AvailablePaymentMethods",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.Companion.from"
    ]
  },
  {
    "name": "fun from(transactionId: String, blikAlias: BlikAlias, ambiguousAlias: AmbiguousAlias): BLIKAmbiguousAliasPayment",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKAmbiguousAliasPayment.Companion.from",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-ambiguous-alias-payment/-companion/from.html",
    "searchKeys": [
      "from",
      "fun from(transactionId: String, blikAlias: BlikAlias, ambiguousAlias: AmbiguousAlias): BLIKAmbiguousAliasPayment",
      "com.tpay.sdk.api.screenless.blik.BLIKAmbiguousAliasPayment.Companion.from"
    ]
  },
  {
    "name": "fun getAvailableInstallmentMethods(installmentPayment: InstallmentPayment, amount: Double): List<PaymentChannel>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getAvailableInstallmentMethods",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/get-available-installment-methods.html",
    "searchKeys": [
      "getAvailableInstallmentMethods",
      "fun getAvailableInstallmentMethods(installmentPayment: InstallmentPayment, amount: Double): List<PaymentChannel>",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getAvailableInstallmentMethods"
    ]
  },
  {
    "name": "fun getAvailableTransfers(amount: Double): List<PaymentChannel>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getAvailableTransfers",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/get-available-transfers.html",
    "searchKeys": [
      "getAvailableTransfers",
      "fun getAvailableTransfers(amount: Double): List<PaymentChannel>",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getAvailableTransfers"
    ]
  },
  {
    "name": "fun getBLIKIfAvailable(amount: Double): PaymentChannel?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getBLIKIfAvailable",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/get-b-l-i-k-if-available.html",
    "searchKeys": [
      "getBLIKIfAvailable",
      "fun getBLIKIfAvailable(amount: Double): PaymentChannel?",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getBLIKIfAvailable"
    ]
  },
  {
    "name": "fun getCreditCardIfAvailable(amount: Double): PaymentChannel?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getCreditCardIfAvailable",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/get-credit-card-if-available.html",
    "searchKeys": [
      "getCreditCardIfAvailable",
      "fun getCreditCardIfAvailable(amount: Double): PaymentChannel?",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getCreditCardIfAvailable"
    ]
  },
  {
    "name": "fun getGooglePayIfAvailable(amount: Double): PaymentChannel?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getGooglePayIfAvailable",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/get-google-pay-if-available.html",
    "searchKeys": [
      "getGooglePayIfAvailable",
      "fun getGooglePayIfAvailable(amount: Double): PaymentChannel?",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.getGooglePayIfAvailable"
    ]
  },
  {
    "name": "fun handleActivityResult(requestCode: Int, resultCode: Int, data: Intent?, result: (OpenGooglePayResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.handleActivityResult",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-util/handle-activity-result.html",
    "searchKeys": [
      "handleActivityResult",
      "fun handleActivityResult(requestCode: Int, resultCode: Int, data: Intent?, result: (OpenGooglePayResult) -> Unit)",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.handleActivityResult"
    ]
  },
  {
    "name": "fun isOpen(supportFragmentManager: FragmentManager): Boolean",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet.Companion.isOpen",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/-companion/is-open.html",
    "searchKeys": [
      "isOpen",
      "fun isOpen(supportFragmentManager: FragmentManager): Boolean",
      "com.tpay.sdk.api.addCard.AddCard.Sheet.Companion.isOpen"
    ]
  },
  {
    "name": "fun isOpen(supportFragmentManager: FragmentManager): Boolean",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.Companion.isOpen",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/-companion/is-open.html",
    "searchKeys": [
      "isOpen",
      "fun isOpen(supportFragmentManager: FragmentManager): Boolean",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.Companion.isOpen"
    ]
  },
  {
    "name": "fun isOpen(supportFragmentManager: FragmentManager): Boolean",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.Companion.isOpen",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/-companion/is-open.html",
    "searchKeys": [
      "isOpen",
      "fun isOpen(supportFragmentManager: FragmentManager): Boolean",
      "com.tpay.sdk.api.payment.Payment.Sheet.Companion.isOpen"
    ]
  },
  {
    "name": "fun isOpen(supportFragmentManager: FragmentManager): Boolean",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.Companion.isOpen",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/-companion/is-open.html",
    "searchKeys": [
      "isOpen",
      "fun isOpen(supportFragmentManager: FragmentManager): Boolean",
      "com.tpay.sdk.api.webView.WebView.Sheet.Companion.isOpen"
    ]
  },
  {
    "name": "fun lock(activity: Activity)",
    "description": "com.tpay.sdk.internal.ScreenOrientationUtil.lock",
    "location": "sdk/com.tpay.sdk.internal/-screen-orientation-util/lock.html",
    "searchKeys": [
      "lock",
      "fun lock(activity: Activity)",
      "com.tpay.sdk.internal.ScreenOrientationUtil.lock"
    ]
  },
  {
    "name": "fun onActivityResult(supportFragmentManager: FragmentManager, requestCode: Int, resultCode: Int, data: Intent?)",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.Companion.onActivityResult",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/-companion/on-activity-result.html",
    "searchKeys": [
      "onActivityResult",
      "fun onActivityResult(supportFragmentManager: FragmentManager, requestCode: Int, resultCode: Int, data: Intent?)",
      "com.tpay.sdk.api.payment.Payment.Sheet.Companion.onActivityResult"
    ]
  },
  {
    "name": "fun onBackPress(supportFragmentManager: FragmentManager)",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.Companion.onBackPress",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/-companion/on-back-press.html",
    "searchKeys": [
      "onBackPress",
      "fun onBackPress(supportFragmentManager: FragmentManager)",
      "com.tpay.sdk.api.payment.Payment.Sheet.Companion.onBackPress"
    ]
  },
  {
    "name": "fun onBackPress(supportFragmentManager: FragmentManager)",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.Companion.onBackPress",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/-companion/on-back-press.html",
    "searchKeys": [
      "onBackPress",
      "fun onBackPress(supportFragmentManager: FragmentManager)",
      "com.tpay.sdk.api.webView.WebView.Sheet.Companion.onBackPress"
    ]
  },
  {
    "name": "fun openGooglePay()",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.openGooglePay",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-util/open-google-pay.html",
    "searchKeys": [
      "openGooglePay",
      "fun openGooglePay()",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.openGooglePay"
    ]
  },
  {
    "name": "fun removeCallback()",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.removeCallback",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/remove-callback.html",
    "searchKeys": [
      "removeCallback",
      "fun removeCallback()",
      "com.tpay.sdk.api.webView.WebView.Sheet.removeCallback"
    ]
  },
  {
    "name": "fun removeObserver()",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet.removeObserver",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/remove-observer.html",
    "searchKeys": [
      "removeObserver",
      "fun removeObserver()",
      "com.tpay.sdk.api.addCard.AddCard.Sheet.removeObserver"
    ]
  },
  {
    "name": "fun restore(supportFragmentManager: FragmentManager, addCardDelegate: AddCardDelegate)",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet.Companion.restore",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/-companion/restore.html",
    "searchKeys": [
      "restore",
      "fun restore(supportFragmentManager: FragmentManager, addCardDelegate: AddCardDelegate)",
      "com.tpay.sdk.api.addCard.AddCard.Sheet.Companion.restore"
    ]
  },
  {
    "name": "fun restore(supportFragmentManager: FragmentManager, paymentDelegate: PaymentDelegate)",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.Companion.restore",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/-companion/restore.html",
    "searchKeys": [
      "restore",
      "fun restore(supportFragmentManager: FragmentManager, paymentDelegate: PaymentDelegate)",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.Companion.restore"
    ]
  },
  {
    "name": "fun restore(supportFragmentManager: FragmentManager, paymentDelegate: PaymentDelegate)",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.Companion.restore",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/-companion/restore.html",
    "searchKeys": [
      "restore",
      "fun restore(supportFragmentManager: FragmentManager, paymentDelegate: PaymentDelegate)",
      "com.tpay.sdk.api.payment.Payment.Sheet.Companion.restore"
    ]
  },
  {
    "name": "fun restore(supportFragmentManager: FragmentManager, webViewCallback: WebViewCallback)",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.Companion.restore",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/-companion/restore.html",
    "searchKeys": [
      "restore",
      "fun restore(supportFragmentManager: FragmentManager, webViewCallback: WebViewCallback)",
      "com.tpay.sdk.api.webView.WebView.Sheet.Companion.restore"
    ]
  },
  {
    "name": "fun runDelayedOnMainThread(action: () -> Unit, duration: Long)",
    "description": "com.tpay.sdk.extensions.runDelayedOnMainThread",
    "location": "sdk/com.tpay.sdk.extensions/run-delayed-on-main-thread.html",
    "searchKeys": [
      "runDelayedOnMainThread",
      "fun runDelayedOnMainThread(action: () -> Unit, duration: Long)",
      "com.tpay.sdk.extensions.runDelayedOnMainThread"
    ]
  },
  {
    "name": "fun runOnMainThread(action: () -> Unit)",
    "description": "com.tpay.sdk.extensions.runOnMainThread",
    "location": "sdk/com.tpay.sdk.extensions/run-on-main-thread.html",
    "searchKeys": [
      "runOnMainThread",
      "fun runOnMainThread(action: () -> Unit)",
      "com.tpay.sdk.extensions.runOnMainThread"
    ]
  },
  {
    "name": "fun setBLIKAlias(blikAlias: BlikAlias): BLIKPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setBLIKAlias",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/set-b-l-i-k-alias.html",
    "searchKeys": [
      "setBLIKAlias",
      "fun setBLIKAlias(blikAlias: BlikAlias): BLIKPayment.Builder",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setBLIKAlias"
    ]
  },
  {
    "name": "fun setBLIKCode(code: String): BLIKPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setBLIKCode",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/set-b-l-i-k-code.html",
    "searchKeys": [
      "setBLIKCode",
      "fun setBLIKCode(code: String): BLIKPayment.Builder",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setBLIKCode"
    ]
  },
  {
    "name": "fun setBLIKCodeAndRegisterAlias(code: String, blikAlias: BlikAlias): BLIKPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setBLIKCodeAndRegisterAlias",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/set-b-l-i-k-code-and-register-alias.html",
    "searchKeys": [
      "setBLIKCodeAndRegisterAlias",
      "fun setBLIKCodeAndRegisterAlias(code: String, blikAlias: BlikAlias): BLIKPayment.Builder",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setBLIKCodeAndRegisterAlias"
    ]
  },
  {
    "name": "fun setCallback(callback: WebViewCallback)",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.setCallback",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/set-callback.html",
    "searchKeys": [
      "setCallback",
      "fun setCallback(callback: WebViewCallback)",
      "com.tpay.sdk.api.webView.WebView.Sheet.setCallback"
    ]
  },
  {
    "name": "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): BLIKPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setCallbacks",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/set-callbacks.html",
    "searchKeys": [
      "setCallbacks",
      "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): BLIKPayment.Builder",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setCallbacks"
    ]
  },
  {
    "name": "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): CreditCardPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setCallbacks",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/set-callbacks.html",
    "searchKeys": [
      "setCallbacks",
      "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): CreditCardPayment.Builder",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setCallbacks"
    ]
  },
  {
    "name": "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): GooglePayPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.setCallbacks",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/-builder/set-callbacks.html",
    "searchKeys": [
      "setCallbacks",
      "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): GooglePayPayment.Builder",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.setCallbacks"
    ]
  },
  {
    "name": "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): PayPoPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.setCallbacks",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-pay-po-payment/-builder/set-callbacks.html",
    "searchKeys": [
      "setCallbacks",
      "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): PayPoPayment.Builder",
      "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.setCallbacks"
    ]
  },
  {
    "name": "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): PekaoInstallmentPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.setCallbacks",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/-builder/set-callbacks.html",
    "searchKeys": [
      "setCallbacks",
      "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): PekaoInstallmentPayment.Builder",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.setCallbacks"
    ]
  },
  {
    "name": "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): TransferPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.setCallbacks",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/-builder/set-callbacks.html",
    "searchKeys": [
      "setCallbacks",
      "fun setCallbacks(redirects: Redirects? = null, notifications: Notifications? = null): TransferPayment.Builder",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.setCallbacks"
    ]
  },
  {
    "name": "fun setChannelId(channelId: Int): PekaoInstallmentPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.setChannelId",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/-builder/set-channel-id.html",
    "searchKeys": [
      "setChannelId",
      "fun setChannelId(channelId: Int): PekaoInstallmentPayment.Builder",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.setChannelId"
    ]
  },
  {
    "name": "fun setChannelId(channelId: Int): TransferPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.setChannelId",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/-builder/set-channel-id.html",
    "searchKeys": [
      "setChannelId",
      "fun setChannelId(channelId: Int): TransferPayment.Builder",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.setChannelId"
    ]
  },
  {
    "name": "fun setCreditCard(creditCard: CreditCard, domain: String, saveCard: Boolean = false, rocText: String? = null): CreditCardPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setCreditCard",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/set-credit-card.html",
    "searchKeys": [
      "setCreditCard",
      "fun setCreditCard(creditCard: CreditCard, domain: String, saveCard: Boolean = false, rocText: String? = null): CreditCardPayment.Builder",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setCreditCard"
    ]
  },
  {
    "name": "fun setCreditCardToken(token: String): CreditCardPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setCreditCardToken",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/set-credit-card-token.html",
    "searchKeys": [
      "setCreditCardToken",
      "fun setCreditCardToken(token: String): CreditCardPayment.Builder",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setCreditCardToken"
    ]
  },
  {
    "name": "fun setGooglePayToken(token: String): GooglePayPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.setGooglePayToken",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/-builder/set-google-pay-token.html",
    "searchKeys": [
      "setGooglePayToken",
      "fun setGooglePayToken(token: String): GooglePayPayment.Builder",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.setGooglePayToken"
    ]
  },
  {
    "name": "fun setPayer(payer: Payer): BLIKPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setPayer",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/set-payer.html",
    "searchKeys": [
      "setPayer",
      "fun setPayer(payer: Payer): BLIKPayment.Builder",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setPayer"
    ]
  },
  {
    "name": "fun setPayer(payer: Payer): CreditCardPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setPayer",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/set-payer.html",
    "searchKeys": [
      "setPayer",
      "fun setPayer(payer: Payer): CreditCardPayment.Builder",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setPayer"
    ]
  },
  {
    "name": "fun setPayer(payer: Payer): GooglePayPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.setPayer",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/-builder/set-payer.html",
    "searchKeys": [
      "setPayer",
      "fun setPayer(payer: Payer): GooglePayPayment.Builder",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.setPayer"
    ]
  },
  {
    "name": "fun setPayer(payer: Payer): PayPoPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.setPayer",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-pay-po-payment/-builder/set-payer.html",
    "searchKeys": [
      "setPayer",
      "fun setPayer(payer: Payer): PayPoPayment.Builder",
      "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.setPayer"
    ]
  },
  {
    "name": "fun setPayer(payer: Payer): PekaoInstallmentPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.setPayer",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/-builder/set-payer.html",
    "searchKeys": [
      "setPayer",
      "fun setPayer(payer: Payer): PekaoInstallmentPayment.Builder",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.setPayer"
    ]
  },
  {
    "name": "fun setPayer(payer: Payer): TransferPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.setPayer",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/-builder/set-payer.html",
    "searchKeys": [
      "setPayer",
      "fun setPayer(payer: Payer): TransferPayment.Builder",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.setPayer"
    ]
  },
  {
    "name": "fun setPaymentDetails(paymentDetails: PaymentDetails): BLIKPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setPaymentDetails",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/set-payment-details.html",
    "searchKeys": [
      "setPaymentDetails",
      "fun setPaymentDetails(paymentDetails: PaymentDetails): BLIKPayment.Builder",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.setPaymentDetails"
    ]
  },
  {
    "name": "fun setPaymentDetails(paymentDetails: PaymentDetails): CreditCardPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setPaymentDetails",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/set-payment-details.html",
    "searchKeys": [
      "setPaymentDetails",
      "fun setPaymentDetails(paymentDetails: PaymentDetails): CreditCardPayment.Builder",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setPaymentDetails"
    ]
  },
  {
    "name": "fun setPaymentDetails(paymentDetails: PaymentDetails): GooglePayPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.setPaymentDetails",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/-builder/set-payment-details.html",
    "searchKeys": [
      "setPaymentDetails",
      "fun setPaymentDetails(paymentDetails: PaymentDetails): GooglePayPayment.Builder",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.setPaymentDetails"
    ]
  },
  {
    "name": "fun setPaymentDetails(paymentDetails: PaymentDetails): PayPoPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.setPaymentDetails",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-pay-po-payment/-builder/set-payment-details.html",
    "searchKeys": [
      "setPaymentDetails",
      "fun setPaymentDetails(paymentDetails: PaymentDetails): PayPoPayment.Builder",
      "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.setPaymentDetails"
    ]
  },
  {
    "name": "fun setPaymentDetails(paymentDetails: PaymentDetails): PekaoInstallmentPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.setPaymentDetails",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/-builder/set-payment-details.html",
    "searchKeys": [
      "setPaymentDetails",
      "fun setPaymentDetails(paymentDetails: PaymentDetails): PekaoInstallmentPayment.Builder",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.setPaymentDetails"
    ]
  },
  {
    "name": "fun setPaymentDetails(paymentDetails: PaymentDetails): TransferPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.setPaymentDetails",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/-builder/set-payment-details.html",
    "searchKeys": [
      "setPaymentDetails",
      "fun setPaymentDetails(paymentDetails: PaymentDetails): TransferPayment.Builder",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.setPaymentDetails"
    ]
  },
  {
    "name": "fun setRecursive(recursive: Recursive): CreditCardPayment.Builder",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setRecursive",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/set-recursive.html",
    "searchKeys": [
      "setRecursive",
      "fun setRecursive(recursive: Recursive): CreditCardPayment.Builder",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.setRecursive"
    ]
  },
  {
    "name": "fun start(transactionId: String, longPollingConfig: LongPollingConfig, isBlikPayment: Boolean = false)",
    "description": "com.tpay.sdk.api.screenless.LongPolling.start",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling/start.html",
    "searchKeys": [
      "start",
      "fun start(transactionId: String, longPollingConfig: LongPollingConfig, isBlikPayment: Boolean = false)",
      "com.tpay.sdk.api.screenless.LongPolling.start"
    ]
  },
  {
    "name": "fun stop()",
    "description": "com.tpay.sdk.api.screenless.LongPolling.stop",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling/stop.html",
    "searchKeys": [
      "stop",
      "fun stop()",
      "com.tpay.sdk.api.screenless.LongPolling.stop"
    ]
  },
  {
    "name": "fun unlock(activity: Activity)",
    "description": "com.tpay.sdk.internal.ScreenOrientationUtil.unlock",
    "location": "sdk/com.tpay.sdk.internal/-screen-orientation-util/unlock.html",
    "searchKeys": [
      "unlock",
      "fun unlock(activity: Activity)",
      "com.tpay.sdk.internal.ScreenOrientationUtil.unlock"
    ]
  },
  {
    "name": "fun valueOf(value: String): Compatibility",
    "description": "com.tpay.sdk.api.models.Compatibility.valueOf",
    "location": "sdk/com.tpay.sdk.api.models/-compatibility/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Compatibility",
      "com.tpay.sdk.api.models.Compatibility.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): CreditCardBrand",
    "description": "com.tpay.sdk.api.paycard.CreditCardBrand.valueOf",
    "location": "sdk/com.tpay.sdk.api.paycard/-credit-card-brand/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): CreditCardBrand",
      "com.tpay.sdk.api.paycard.CreditCardBrand.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): DigitalWallet",
    "description": "com.tpay.sdk.api.models.DigitalWallet.valueOf",
    "location": "sdk/com.tpay.sdk.api.models/-digital-wallet/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): DigitalWallet",
      "com.tpay.sdk.api.models.DigitalWallet.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): Environment",
    "description": "com.tpay.sdk.api.models.Environment.valueOf",
    "location": "sdk/com.tpay.sdk.api.models/-environment/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Environment",
      "com.tpay.sdk.api.models.Environment.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): Frequency",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.valueOf",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Frequency",
      "com.tpay.sdk.api.models.transaction.Frequency.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): GooglePayEnvironment",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.valueOf",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-environment/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): GooglePayEnvironment",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): InstallmentPayment",
    "description": "com.tpay.sdk.api.models.InstallmentPayment.valueOf",
    "location": "sdk/com.tpay.sdk.api.models/-installment-payment/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): InstallmentPayment",
      "com.tpay.sdk.api.models.InstallmentPayment.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): Language",
    "description": "com.tpay.sdk.api.models.Language.valueOf",
    "location": "sdk/com.tpay.sdk.api.models/-language/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Language",
      "com.tpay.sdk.api.models.Language.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): TransactionState",
    "description": "com.tpay.sdk.api.screenless.TransactionState.valueOf",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): TransactionState",
      "com.tpay.sdk.api.screenless.TransactionState.valueOf"
    ]
  },
  {
    "name": "fun values(): Array<Compatibility>",
    "description": "com.tpay.sdk.api.models.Compatibility.values",
    "location": "sdk/com.tpay.sdk.api.models/-compatibility/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Compatibility>",
      "com.tpay.sdk.api.models.Compatibility.values"
    ]
  },
  {
    "name": "fun values(): Array<CreditCardBrand>",
    "description": "com.tpay.sdk.api.paycard.CreditCardBrand.values",
    "location": "sdk/com.tpay.sdk.api.paycard/-credit-card-brand/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<CreditCardBrand>",
      "com.tpay.sdk.api.paycard.CreditCardBrand.values"
    ]
  },
  {
    "name": "fun values(): Array<DigitalWallet>",
    "description": "com.tpay.sdk.api.models.DigitalWallet.values",
    "location": "sdk/com.tpay.sdk.api.models/-digital-wallet/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<DigitalWallet>",
      "com.tpay.sdk.api.models.DigitalWallet.values"
    ]
  },
  {
    "name": "fun values(): Array<Environment>",
    "description": "com.tpay.sdk.api.models.Environment.values",
    "location": "sdk/com.tpay.sdk.api.models/-environment/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Environment>",
      "com.tpay.sdk.api.models.Environment.values"
    ]
  },
  {
    "name": "fun values(): Array<Frequency>",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.values",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Frequency>",
      "com.tpay.sdk.api.models.transaction.Frequency.values"
    ]
  },
  {
    "name": "fun values(): Array<GooglePayEnvironment>",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.values",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-environment/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<GooglePayEnvironment>",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.values"
    ]
  },
  {
    "name": "fun values(): Array<InstallmentPayment>",
    "description": "com.tpay.sdk.api.models.InstallmentPayment.values",
    "location": "sdk/com.tpay.sdk.api.models/-installment-payment/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<InstallmentPayment>",
      "com.tpay.sdk.api.models.InstallmentPayment.values"
    ]
  },
  {
    "name": "fun values(): Array<Language>",
    "description": "com.tpay.sdk.api.models.Language.values",
    "location": "sdk/com.tpay.sdk.api.models/-language/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Language>",
      "com.tpay.sdk.api.models.Language.values"
    ]
  },
  {
    "name": "fun values(): Array<TransactionState>",
    "description": "com.tpay.sdk.api.screenless.TransactionState.values",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<TransactionState>",
      "com.tpay.sdk.api.screenless.TransactionState.values"
    ]
  },
  {
    "name": "inline fun <T : Parcelable> Parcel.readParcelableOrThrow(): T",
    "description": "com.tpay.sdk.extensions.readParcelableOrThrow",
    "location": "sdk/com.tpay.sdk.extensions/read-parcelable-or-throw.html",
    "searchKeys": [
      "readParcelableOrThrow",
      "inline fun <T : Parcelable> Parcel.readParcelableOrThrow(): T",
      "com.tpay.sdk.extensions.readParcelableOrThrow"
    ]
  },
  {
    "name": "inline fun <T> SavedStateHandle.getOrThrow(key: String): T",
    "description": "com.tpay.sdk.extensions.getOrThrow",
    "location": "sdk/com.tpay.sdk.extensions/get-or-throw.html",
    "searchKeys": [
      "getOrThrow",
      "inline fun <T> SavedStateHandle.getOrThrow(key: String): T",
      "com.tpay.sdk.extensions.getOrThrow"
    ]
  },
  {
    "name": "interface ActivityResultListener",
    "description": "com.tpay.sdk.api.models.ActivityResultListener",
    "location": "sdk/com.tpay.sdk.api.models/-activity-result-listener/index.html",
    "searchKeys": [
      "ActivityResultListener",
      "interface ActivityResultListener",
      "com.tpay.sdk.api.models.ActivityResultListener"
    ]
  },
  {
    "name": "interface AddCardDelegate",
    "description": "com.tpay.sdk.api.addCard.AddCardDelegate",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card-delegate/index.html",
    "searchKeys": [
      "AddCardDelegate",
      "interface AddCardDelegate",
      "com.tpay.sdk.api.addCard.AddCardDelegate"
    ]
  },
  {
    "name": "interface MerchantDetailsProvider",
    "description": "com.tpay.sdk.api.providers.MerchantDetailsProvider",
    "location": "sdk/com.tpay.sdk.api.providers/-merchant-details-provider/index.html",
    "searchKeys": [
      "MerchantDetailsProvider",
      "interface MerchantDetailsProvider",
      "com.tpay.sdk.api.providers.MerchantDetailsProvider"
    ]
  },
  {
    "name": "interface ObservablePayment",
    "description": "com.tpay.sdk.api.models.ObservablePayment",
    "location": "sdk/com.tpay.sdk.api.models/-observable-payment/index.html",
    "searchKeys": [
      "ObservablePayment",
      "interface ObservablePayment",
      "com.tpay.sdk.api.models.ObservablePayment"
    ]
  },
  {
    "name": "interface PaymentDelegate",
    "description": "com.tpay.sdk.api.payment.PaymentDelegate",
    "location": "sdk/com.tpay.sdk.api.payment/-payment-delegate/index.html",
    "searchKeys": [
      "PaymentDelegate",
      "interface PaymentDelegate",
      "com.tpay.sdk.api.payment.PaymentDelegate"
    ]
  },
  {
    "name": "interface Presentable",
    "description": "com.tpay.sdk.api.models.Presentable",
    "location": "sdk/com.tpay.sdk.api.models/-presentable/index.html",
    "searchKeys": [
      "Presentable",
      "interface Presentable",
      "com.tpay.sdk.api.models.Presentable"
    ]
  },
  {
    "name": "interface Recursive",
    "description": "com.tpay.sdk.api.models.transaction.Recursive",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-recursive/index.html",
    "searchKeys": [
      "Recursive",
      "interface Recursive",
      "com.tpay.sdk.api.models.transaction.Recursive"
    ]
  },
  {
    "name": "interface SSLCertificatesProvider",
    "description": "com.tpay.sdk.api.providers.SSLCertificatesProvider",
    "location": "sdk/com.tpay.sdk.api.providers/-s-s-l-certificates-provider/index.html",
    "searchKeys": [
      "SSLCertificatesProvider",
      "interface SSLCertificatesProvider",
      "com.tpay.sdk.api.providers.SSLCertificatesProvider"
    ]
  },
  {
    "name": "interface Transaction : Parcelable",
    "description": "com.tpay.sdk.api.models.transaction.Transaction",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-transaction/index.html",
    "searchKeys": [
      "Transaction",
      "interface Transaction : Parcelable",
      "com.tpay.sdk.api.models.transaction.Transaction"
    ]
  },
  {
    "name": "interface WebViewCallback",
    "description": "com.tpay.sdk.api.webView.WebViewCallback",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-callback/index.html",
    "searchKeys": [
      "WebViewCallback",
      "interface WebViewCallback",
      "com.tpay.sdk.api.webView.WebViewCallback"
    ]
  },
  {
    "name": "object Blik : PaymentMethod",
    "description": "com.tpay.sdk.api.models.PaymentMethod.Blik",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-blik/index.html",
    "searchKeys": [
      "Blik",
      "object Blik : PaymentMethod",
      "com.tpay.sdk.api.models.PaymentMethod.Blik"
    ]
  },
  {
    "name": "object Cancelled : OpenGooglePayResult",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Cancelled",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/-cancelled/index.html",
    "searchKeys": [
      "Cancelled",
      "object Cancelled : OpenGooglePayResult",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Cancelled"
    ]
  },
  {
    "name": "object Card : PaymentMethod",
    "description": "com.tpay.sdk.api.models.PaymentMethod.Card",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-card/index.html",
    "searchKeys": [
      "Card",
      "object Card : PaymentMethod",
      "com.tpay.sdk.api.models.PaymentMethod.Card"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.PayCardEncryptor.Companion",
    "location": "sdk/com.tpay.sdk.api/-pay-card-encryptor/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.PayCardEncryptor.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet.Companion",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.addCard.AddCard.Sheet.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.Companion",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.models.PaymentMethod.Companion",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.models.PaymentMethod.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.Companion",
    "location": "sdk/com.tpay.sdk.api.models.moduleError/-module-error/-configuration-error/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.Companion",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.models.transaction.Frequency.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.Companion",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.payment.Payment.Sheet.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.Payment.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.Payment.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.PaymentBuilder.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-builder/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.PaymentBuilder.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.TransactionState.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.TransactionState.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKAmbiguousAliasPayment.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-ambiguous-alias-payment/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.blik.BLIKAmbiguousAliasPayment.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannels.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannels.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayRequest.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-request/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayRequest.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.Companion",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-util/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayUtil.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule.Companion",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.tpayModule.TpayModule.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.Companion",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.webView.WebView.Sheet.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult.Companion",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.api.webView.WebViewCheckResult.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "com.tpay.sdk.server.AccessToken.Companion",
    "location": "sdk/com.tpay.sdk.server/-access-token/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "com.tpay.sdk.server.AccessToken.Companion"
    ]
  },
  {
    "name": "object GooglePayNotConfigured : ModuleError.ConfigurationError",
    "description": "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.GooglePayNotConfigured",
    "location": "sdk/com.tpay.sdk.api.models.moduleError/-module-error/-configuration-error/-google-pay-not-configured/index.html",
    "searchKeys": [
      "GooglePayNotConfigured",
      "object GooglePayNotConfigured : ModuleError.ConfigurationError",
      "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.GooglePayNotConfigured"
    ]
  },
  {
    "name": "object Indefinite : Quantity",
    "description": "com.tpay.sdk.api.models.transaction.Quantity.Indefinite",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-quantity/-indefinite/index.html",
    "searchKeys": [
      "Indefinite",
      "object Indefinite : Quantity",
      "com.tpay.sdk.api.models.transaction.Quantity.Indefinite"
    ]
  },
  {
    "name": "object MerchantCredentialsNotProvided : ModuleError.ConfigurationError",
    "description": "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.MerchantCredentialsNotProvided",
    "location": "sdk/com.tpay.sdk.api.models.moduleError/-module-error/-configuration-error/-merchant-credentials-not-provided/index.html",
    "searchKeys": [
      "MerchantCredentialsNotProvided",
      "object MerchantCredentialsNotProvided : ModuleError.ConfigurationError",
      "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.MerchantCredentialsNotProvided"
    ]
  },
  {
    "name": "object MerchantDetailsProviderNotProvided : ModuleError.ConfigurationError",
    "description": "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.MerchantDetailsProviderNotProvided",
    "location": "sdk/com.tpay.sdk.api.models.moduleError/-module-error/-configuration-error/-merchant-details-provider-not-provided/index.html",
    "searchKeys": [
      "MerchantDetailsProviderNotProvided",
      "object MerchantDetailsProviderNotProvided : ModuleError.ConfigurationError",
      "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.MerchantDetailsProviderNotProvided"
    ]
  },
  {
    "name": "object Pbl : PaymentMethod",
    "description": "com.tpay.sdk.api.models.PaymentMethod.Pbl",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-pbl/index.html",
    "searchKeys": [
      "Pbl",
      "object Pbl : PaymentMethod",
      "com.tpay.sdk.api.models.PaymentMethod.Pbl"
    ]
  },
  {
    "name": "object SSLCertificateProviderNotProvided : ModuleError.ConfigurationError",
    "description": "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.SSLCertificateProviderNotProvided",
    "location": "sdk/com.tpay.sdk.api.models.moduleError/-module-error/-configuration-error/-s-s-l-certificate-provider-not-provided/index.html",
    "searchKeys": [
      "SSLCertificateProviderNotProvided",
      "object SSLCertificateProviderNotProvided : ModuleError.ConfigurationError",
      "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.SSLCertificateProviderNotProvided"
    ]
  },
  {
    "name": "object ScreenOrientationUtil",
    "description": "com.tpay.sdk.internal.ScreenOrientationUtil",
    "location": "sdk/com.tpay.sdk.internal/-screen-orientation-util/index.html",
    "searchKeys": [
      "ScreenOrientationUtil",
      "object ScreenOrientationUtil",
      "com.tpay.sdk.internal.ScreenOrientationUtil"
    ]
  },
  {
    "name": "object Success : SheetOpenResult",
    "description": "com.tpay.sdk.api.models.SheetOpenResult.Success",
    "location": "sdk/com.tpay.sdk.api.models/-sheet-open-result/-success/index.html",
    "searchKeys": [
      "Success",
      "object Success : SheetOpenResult",
      "com.tpay.sdk.api.models.SheetOpenResult.Success"
    ]
  },
  {
    "name": "object UnknownError : OpenGooglePayResult",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.UnknownError",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/-unknown-error/index.html",
    "searchKeys": [
      "UnknownError",
      "object UnknownError : OpenGooglePayResult",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.UnknownError"
    ]
  },
  {
    "name": "object Valid : ConfigurationCheckResult",
    "description": "com.tpay.sdk.api.models.ConfigurationCheckResult.Valid",
    "location": "sdk/com.tpay.sdk.api.models/-configuration-check-result/-valid/index.html",
    "searchKeys": [
      "Valid",
      "object Valid : ConfigurationCheckResult",
      "com.tpay.sdk.api.models.ConfigurationCheckResult.Valid"
    ]
  },
  {
    "name": "object Valid : WebViewCheckResult",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult.Valid",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/-valid/index.html",
    "searchKeys": [
      "Valid",
      "object Valid : WebViewCheckResult",
      "com.tpay.sdk.api.webView.WebViewCheckResult.Valid"
    ]
  },
  {
    "name": "open override fun addObserver(paymentDelegate: PaymentDelegate)",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.addObserver",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/add-observer.html",
    "searchKeys": [
      "addObserver",
      "open override fun addObserver(paymentDelegate: PaymentDelegate)",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.addObserver"
    ]
  },
  {
    "name": "open override fun addObserver(paymentDelegate: PaymentDelegate)",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.addObserver",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/add-observer.html",
    "searchKeys": [
      "addObserver",
      "open override fun addObserver(paymentDelegate: PaymentDelegate)",
      "com.tpay.sdk.api.payment.Payment.Sheet.addObserver"
    ]
  },
  {
    "name": "open override fun build(): BLIKPayment",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.build",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/-builder/build.html",
    "searchKeys": [
      "build",
      "open override fun build(): BLIKPayment",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.Builder.build"
    ]
  },
  {
    "name": "open override fun build(): CreditCardPayment",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.build",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/-builder/build.html",
    "searchKeys": [
      "build",
      "open override fun build(): CreditCardPayment",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.Builder.build"
    ]
  },
  {
    "name": "open override fun build(): GooglePayPayment",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.build",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/-builder/build.html",
    "searchKeys": [
      "build",
      "open override fun build(): GooglePayPayment",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.Builder.build"
    ]
  },
  {
    "name": "open override fun build(): PayPoPayment",
    "description": "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.build",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-pay-po-payment/-builder/build.html",
    "searchKeys": [
      "build",
      "open override fun build(): PayPoPayment",
      "com.tpay.sdk.api.screenless.payPo.PayPoPayment.Builder.build"
    ]
  },
  {
    "name": "open override fun build(): PekaoInstallmentPayment",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.build",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/-builder/build.html",
    "searchKeys": [
      "build",
      "open override fun build(): PekaoInstallmentPayment",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.Builder.build"
    ]
  },
  {
    "name": "open override fun build(): TransferPayment",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.build",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/-builder/build.html",
    "searchKeys": [
      "build",
      "open override fun build(): TransferPayment",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment.Builder.build"
    ]
  },
  {
    "name": "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateBLIKTransactionResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKAmbiguousAliasPayment.execute",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-ambiguous-alias-payment/execute.html",
    "searchKeys": [
      "execute",
      "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateBLIKTransactionResult) -> Unit)",
      "com.tpay.sdk.api.screenless.blik.BLIKAmbiguousAliasPayment.execute"
    ]
  },
  {
    "name": "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateBLIKTransactionResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.blik.BLIKPayment.execute",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-b-l-i-k-payment/execute.html",
    "searchKeys": [
      "execute",
      "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateBLIKTransactionResult) -> Unit)",
      "com.tpay.sdk.api.screenless.blik.BLIKPayment.execute"
    ]
  },
  {
    "name": "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateCreditCardTransactionResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.card.CreditCardPayment.execute",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card-payment/execute.html",
    "searchKeys": [
      "execute",
      "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateCreditCardTransactionResult) -> Unit)",
      "com.tpay.sdk.api.screenless.card.CreditCardPayment.execute"
    ]
  },
  {
    "name": "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateGooglePayTransactionResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.execute",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-payment/execute.html",
    "searchKeys": [
      "execute",
      "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateGooglePayTransactionResult) -> Unit)",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayPayment.execute"
    ]
  },
  {
    "name": "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreatePayPoTransactionResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.payPo.PayPoPayment.execute",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-pay-po-payment/execute.html",
    "searchKeys": [
      "execute",
      "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreatePayPoTransactionResult) -> Unit)",
      "com.tpay.sdk.api.screenless.payPo.PayPoPayment.execute"
    ]
  },
  {
    "name": "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreatePekaoInstallmentTransactionResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.execute",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-pekao-installment-payment/execute.html",
    "searchKeys": [
      "execute",
      "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreatePekaoInstallmentTransactionResult) -> Unit)",
      "com.tpay.sdk.api.screenless.pekaoInstallment.PekaoInstallmentPayment.execute"
    ]
  },
  {
    "name": "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateTransferTransactionResult) -> Unit)",
    "description": "com.tpay.sdk.api.screenless.transfer.TransferPayment.execute",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-transfer-payment/execute.html",
    "searchKeys": [
      "execute",
      "open override fun execute(longPollingConfig: LongPollingConfig?, onResult: (CreateTransferTransactionResult) -> Unit)",
      "com.tpay.sdk.api.screenless.transfer.TransferPayment.execute"
    ]
  },
  {
    "name": "open override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?)",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.onActivityResult",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/on-activity-result.html",
    "searchKeys": [
      "onActivityResult",
      "open override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?)",
      "com.tpay.sdk.api.payment.Payment.Sheet.onActivityResult"
    ]
  },
  {
    "name": "open override fun onBackPressed()",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet.onBackPressed",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/on-back-pressed.html",
    "searchKeys": [
      "onBackPressed",
      "open override fun onBackPressed()",
      "com.tpay.sdk.api.addCard.AddCard.Sheet.onBackPressed"
    ]
  },
  {
    "name": "open override fun onBackPressed()",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.onBackPressed",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/on-back-pressed.html",
    "searchKeys": [
      "onBackPressed",
      "open override fun onBackPressed()",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.onBackPressed"
    ]
  },
  {
    "name": "open override fun onBackPressed()",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.onBackPressed",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/on-back-pressed.html",
    "searchKeys": [
      "onBackPressed",
      "open override fun onBackPressed()",
      "com.tpay.sdk.api.payment.Payment.Sheet.onBackPressed"
    ]
  },
  {
    "name": "open override fun onBackPressed()",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.onBackPressed",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/on-back-pressed.html",
    "searchKeys": [
      "onBackPressed",
      "open override fun onBackPressed()",
      "com.tpay.sdk.api.webView.WebView.Sheet.onBackPressed"
    ]
  },
  {
    "name": "open override fun present(): SheetOpenResult",
    "description": "com.tpay.sdk.api.addCard.AddCard.Sheet.present",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/-sheet/present.html",
    "searchKeys": [
      "present",
      "open override fun present(): SheetOpenResult",
      "com.tpay.sdk.api.addCard.AddCard.Sheet.present"
    ]
  },
  {
    "name": "open override fun present(): SheetOpenResult",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.present",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/present.html",
    "searchKeys": [
      "present",
      "open override fun present(): SheetOpenResult",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.present"
    ]
  },
  {
    "name": "open override fun present(): SheetOpenResult",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.present",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/present.html",
    "searchKeys": [
      "present",
      "open override fun present(): SheetOpenResult",
      "com.tpay.sdk.api.payment.Payment.Sheet.present"
    ]
  },
  {
    "name": "open override fun present(): SheetOpenResult",
    "description": "com.tpay.sdk.api.webView.WebView.Sheet.present",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view/-sheet/present.html",
    "searchKeys": [
      "present",
      "open override fun present(): SheetOpenResult",
      "com.tpay.sdk.api.webView.WebView.Sheet.present"
    ]
  },
  {
    "name": "open override fun removeObserver()",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.removeObserver",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/-sheet/remove-observer.html",
    "searchKeys": [
      "removeObserver",
      "open override fun removeObserver()",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment.Sheet.removeObserver"
    ]
  },
  {
    "name": "open override fun removeObserver()",
    "description": "com.tpay.sdk.api.payment.Payment.Sheet.removeObserver",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/-sheet/remove-observer.html",
    "searchKeys": [
      "removeObserver",
      "open override fun removeObserver()",
      "com.tpay.sdk.api.payment.Payment.Sheet.removeObserver"
    ]
  },
  {
    "name": "open override fun setOnClickListener(l: View.OnClickListener?)",
    "description": "com.tpay.sdk.PayButton.setOnClickListener",
    "location": "sdk/com.tpay.sdk/-pay-button/set-on-click-listener.html",
    "searchKeys": [
      "setOnClickListener",
      "open override fun setOnClickListener(l: View.OnClickListener?)",
      "com.tpay.sdk.PayButton.setOnClickListener"
    ]
  },
  {
    "name": "open override val amount: Double",
    "description": "com.tpay.sdk.api.models.transaction.SingleTransaction.amount",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-single-transaction/amount.html",
    "searchKeys": [
      "amount",
      "open override val amount: Double",
      "com.tpay.sdk.api.models.transaction.SingleTransaction.amount"
    ]
  },
  {
    "name": "open override val description: String",
    "description": "com.tpay.sdk.api.models.transaction.SingleTransaction.description",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-single-transaction/description.html",
    "searchKeys": [
      "description",
      "open override val description: String",
      "com.tpay.sdk.api.models.transaction.SingleTransaction.description"
    ]
  },
  {
    "name": "open override val label: String? = null",
    "description": "com.tpay.sdk.api.models.BlikAlias.NotRegistered.label",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/-not-registered/label.html",
    "searchKeys": [
      "label",
      "open override val label: String? = null",
      "com.tpay.sdk.api.models.BlikAlias.NotRegistered.label"
    ]
  },
  {
    "name": "open override val label: String? = null",
    "description": "com.tpay.sdk.api.models.BlikAlias.Registered.label",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/-registered/label.html",
    "searchKeys": [
      "label",
      "open override val label: String? = null",
      "com.tpay.sdk.api.models.BlikAlias.Registered.label"
    ]
  },
  {
    "name": "open override val notifications: Notifications?",
    "description": "com.tpay.sdk.api.models.transaction.SingleTransaction.notifications",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-single-transaction/notifications.html",
    "searchKeys": [
      "notifications",
      "open override val notifications: Notifications?",
      "com.tpay.sdk.api.models.transaction.SingleTransaction.notifications"
    ]
  },
  {
    "name": "open override val payerContext: PayerContext",
    "description": "com.tpay.sdk.api.models.transaction.SingleTransaction.payerContext",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-single-transaction/payer-context.html",
    "searchKeys": [
      "payerContext",
      "open override val payerContext: PayerContext",
      "com.tpay.sdk.api.models.transaction.SingleTransaction.payerContext"
    ]
  },
  {
    "name": "open override val value: String",
    "description": "com.tpay.sdk.api.models.BlikAlias.NotRegistered.value",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/-not-registered/value.html",
    "searchKeys": [
      "value",
      "open override val value: String",
      "com.tpay.sdk.api.models.BlikAlias.NotRegistered.value"
    ]
  },
  {
    "name": "open override val value: String",
    "description": "com.tpay.sdk.api.models.BlikAlias.Registered.value",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/-registered/value.html",
    "searchKeys": [
      "value",
      "open override val value: String",
      "com.tpay.sdk.api.models.BlikAlias.Registered.value"
    ]
  },
  {
    "name": "open val label: String?",
    "description": "com.tpay.sdk.api.models.BlikAlias.label",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/label.html",
    "searchKeys": [
      "label",
      "open val label: String?",
      "com.tpay.sdk.api.models.BlikAlias.label"
    ]
  },
  {
    "name": "open val value: String",
    "description": "com.tpay.sdk.api.models.BlikAlias.value",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/value.html",
    "searchKeys": [
      "value",
      "open val value: String",
      "com.tpay.sdk.api.models.BlikAlias.value"
    ]
  },
  {
    "name": "sealed class AddCard",
    "description": "com.tpay.sdk.api.addCard.AddCard",
    "location": "sdk/com.tpay.sdk.api.addCard/-add-card/index.html",
    "searchKeys": [
      "AddCard",
      "sealed class AddCard",
      "com.tpay.sdk.api.addCard.AddCard"
    ]
  },
  {
    "name": "sealed class BlikAlias : Parcelable",
    "description": "com.tpay.sdk.api.models.BlikAlias",
    "location": "sdk/com.tpay.sdk.api.models/-blik-alias/index.html",
    "searchKeys": [
      "BlikAlias",
      "sealed class BlikAlias : Parcelable",
      "com.tpay.sdk.api.models.BlikAlias"
    ]
  },
  {
    "name": "sealed class CardTokenPayment",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-payment/index.html",
    "searchKeys": [
      "CardTokenPayment",
      "sealed class CardTokenPayment",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenPayment"
    ]
  },
  {
    "name": "sealed class ConfigurationCheckResult",
    "description": "com.tpay.sdk.api.models.ConfigurationCheckResult",
    "location": "sdk/com.tpay.sdk.api.models/-configuration-check-result/index.html",
    "searchKeys": [
      "ConfigurationCheckResult",
      "sealed class ConfigurationCheckResult",
      "com.tpay.sdk.api.models.ConfigurationCheckResult"
    ]
  },
  {
    "name": "sealed class ConfigurationError : ModuleError",
    "description": "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError",
    "location": "sdk/com.tpay.sdk.api.models.moduleError/-module-error/-configuration-error/index.html",
    "searchKeys": [
      "ConfigurationError",
      "sealed class ConfigurationError : ModuleError",
      "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError"
    ]
  },
  {
    "name": "sealed class CreateBLIKTransactionResult",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/index.html",
    "searchKeys": [
      "CreateBLIKTransactionResult",
      "sealed class CreateBLIKTransactionResult",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult"
    ]
  },
  {
    "name": "sealed class CreateCreditCardTransactionResult",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/index.html",
    "searchKeys": [
      "CreateCreditCardTransactionResult",
      "sealed class CreateCreditCardTransactionResult",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult"
    ]
  },
  {
    "name": "sealed class CreateGooglePayTransactionResult",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/index.html",
    "searchKeys": [
      "CreateGooglePayTransactionResult",
      "sealed class CreateGooglePayTransactionResult",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult"
    ]
  },
  {
    "name": "sealed class CreatePayPoTransactionResult",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/index.html",
    "searchKeys": [
      "CreatePayPoTransactionResult",
      "sealed class CreatePayPoTransactionResult",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult"
    ]
  },
  {
    "name": "sealed class CreatePekaoInstallmentTransactionResult",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/index.html",
    "searchKeys": [
      "CreatePekaoInstallmentTransactionResult",
      "sealed class CreatePekaoInstallmentTransactionResult",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult"
    ]
  },
  {
    "name": "sealed class CreateTransferTransactionResult",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/index.html",
    "searchKeys": [
      "CreateTransferTransactionResult",
      "sealed class CreateTransferTransactionResult",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult"
    ]
  },
  {
    "name": "sealed class GetPaymentChannelsResult",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/index.html",
    "searchKeys": [
      "GetPaymentChannelsResult",
      "sealed class GetPaymentChannelsResult",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult"
    ]
  },
  {
    "name": "sealed class ModuleError : Error",
    "description": "com.tpay.sdk.api.models.moduleError.ModuleError",
    "location": "sdk/com.tpay.sdk.api.models.moduleError/-module-error/index.html",
    "searchKeys": [
      "ModuleError",
      "sealed class ModuleError : Error",
      "com.tpay.sdk.api.models.moduleError.ModuleError"
    ]
  },
  {
    "name": "sealed class OpenGooglePayResult",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/index.html",
    "searchKeys": [
      "OpenGooglePayResult",
      "sealed class OpenGooglePayResult",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult"
    ]
  },
  {
    "name": "sealed class Payment",
    "description": "com.tpay.sdk.api.payment.Payment",
    "location": "sdk/com.tpay.sdk.api.payment/-payment/index.html",
    "searchKeys": [
      "Payment",
      "sealed class Payment",
      "com.tpay.sdk.api.payment.Payment"
    ]
  },
  {
    "name": "sealed class PaymentConstraint",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-constraint/index.html",
    "searchKeys": [
      "PaymentConstraint",
      "sealed class PaymentConstraint",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint"
    ]
  },
  {
    "name": "sealed class PaymentMethod",
    "description": "com.tpay.sdk.api.models.PaymentMethod",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/index.html",
    "searchKeys": [
      "PaymentMethod",
      "sealed class PaymentMethod",
      "com.tpay.sdk.api.models.PaymentMethod"
    ]
  },
  {
    "name": "sealed class Quantity",
    "description": "com.tpay.sdk.api.models.transaction.Quantity",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-quantity/index.html",
    "searchKeys": [
      "Quantity",
      "sealed class Quantity",
      "com.tpay.sdk.api.models.transaction.Quantity"
    ]
  },
  {
    "name": "sealed class SheetOpenResult",
    "description": "com.tpay.sdk.api.models.SheetOpenResult",
    "location": "sdk/com.tpay.sdk.api.models/-sheet-open-result/index.html",
    "searchKeys": [
      "SheetOpenResult",
      "sealed class SheetOpenResult",
      "com.tpay.sdk.api.models.SheetOpenResult"
    ]
  },
  {
    "name": "sealed class TpayModule",
    "description": "com.tpay.sdk.api.tpayModule.TpayModule",
    "location": "sdk/com.tpay.sdk.api.tpayModule/-tpay-module/index.html",
    "searchKeys": [
      "TpayModule",
      "sealed class TpayModule",
      "com.tpay.sdk.api.tpayModule.TpayModule"
    ]
  },
  {
    "name": "sealed class WebViewCheckResult",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/index.html",
    "searchKeys": [
      "WebViewCheckResult",
      "sealed class WebViewCheckResult",
      "com.tpay.sdk.api.webView.WebViewCheckResult"
    ]
  },
  {
    "name": "val Frequency.code: Int",
    "description": "com.tpay.sdk.api.models.transaction.Frequency.Companion.code",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-frequency/-companion/code.html",
    "searchKeys": [
      "code",
      "val Frequency.code: Int",
      "com.tpay.sdk.api.models.transaction.Frequency.Companion.code"
    ]
  },
  {
    "name": "val SUCCESS_STATES: List<String>",
    "description": "com.tpay.sdk.api.screenless.TransactionState.Companion.SUCCESS_STATES",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/-companion/-s-u-c-c-e-s-s_-s-t-a-t-e-s.html",
    "searchKeys": [
      "SUCCESS_STATES",
      "val SUCCESS_STATES: List<String>",
      "com.tpay.sdk.api.screenless.TransactionState.Companion.SUCCESS_STATES"
    ]
  },
  {
    "name": "val actual: Int",
    "description": "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.actual",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-google-pay-environment/actual.html",
    "searchKeys": [
      "actual",
      "val actual: Int",
      "com.tpay.sdk.api.screenless.googlePay.GooglePayEnvironment.actual"
    ]
  },
  {
    "name": "val actual: String",
    "description": "com.tpay.sdk.api.screenless.TransactionState.actual",
    "location": "sdk/com.tpay.sdk.api.screenless/-transaction-state/actual.html",
    "searchKeys": [
      "actual",
      "val actual: String",
      "com.tpay.sdk.api.screenless.TransactionState.actual"
    ]
  },
  {
    "name": "val aliases: List<AmbiguousAlias>",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.AmbiguousBlikAlias.aliases",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-ambiguous-blik-alias/aliases.html",
    "searchKeys": [
      "aliases",
      "val aliases: List<AmbiguousAlias>",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.AmbiguousBlikAlias.aliases"
    ]
  },
  {
    "name": "val allMethods: List<PaymentMethod>",
    "description": "com.tpay.sdk.api.models.PaymentMethod.Companion.allMethods",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-companion/all-methods.html",
    "searchKeys": [
      "allMethods",
      "val allMethods: List<PaymentMethod>",
      "com.tpay.sdk.api.models.PaymentMethod.Companion.allMethods"
    ]
  },
  {
    "name": "val amount: Double",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.amount",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-transaction/amount.html",
    "searchKeys": [
      "amount",
      "val amount: Double",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.amount"
    ]
  },
  {
    "name": "val amount: Double",
    "description": "com.tpay.sdk.api.screenless.PaymentDetails.amount",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-details/amount.html",
    "searchKeys": [
      "amount",
      "val amount: Double",
      "com.tpay.sdk.api.screenless.PaymentDetails.amount"
    ]
  },
  {
    "name": "val asChannelMethod: ChannelMethod",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.asChannelMethod",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/as-channel-method.html",
    "searchKeys": [
      "asChannelMethod",
      "val asChannelMethod: ChannelMethod",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.asChannelMethod"
    ]
  },
  {
    "name": "val authorization: Merchant.Authorization",
    "description": "com.tpay.sdk.api.models.merchant.Merchant.authorization",
    "location": "sdk/com.tpay.sdk.api.models.merchant/-merchant/authorization.html",
    "searchKeys": [
      "authorization",
      "val authorization: Merchant.Authorization",
      "com.tpay.sdk.api.models.merchant.Merchant.authorization"
    ]
  },
  {
    "name": "val automaticPaymentMethods: AutomaticPaymentMethods? = null",
    "description": "com.tpay.sdk.api.models.PayerContext.automaticPaymentMethods",
    "location": "sdk/com.tpay.sdk.api.models/-payer-context/automatic-payment-methods.html",
    "searchKeys": [
      "automaticPaymentMethods",
      "val automaticPaymentMethods: AutomaticPaymentMethods? = null",
      "com.tpay.sdk.api.models.PayerContext.automaticPaymentMethods"
    ]
  },
  {
    "name": "val availablePekaoInstallmentMethods: List<ChannelMethod>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.availablePekaoInstallmentMethods",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/available-pekao-installment-methods.html",
    "searchKeys": [
      "availablePekaoInstallmentMethods",
      "val availablePekaoInstallmentMethods: List<ChannelMethod>",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.availablePekaoInstallmentMethods"
    ]
  },
  {
    "name": "val availableTransfers: List<ChannelMethod>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.availableTransfers",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/available-transfers.html",
    "searchKeys": [
      "availableTransfers",
      "val availableTransfers: List<ChannelMethod>",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.availableTransfers"
    ]
  },
  {
    "name": "val availableWallets: List<WalletMethod>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.availableWallets",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/available-wallets.html",
    "searchKeys": [
      "availableWallets",
      "val availableWallets: List<WalletMethod>",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.availableWallets"
    ]
  },
  {
    "name": "val blikAlias: BlikAlias? = null",
    "description": "com.tpay.sdk.api.models.AutomaticPaymentMethods.blikAlias",
    "location": "sdk/com.tpay.sdk.api.models/-automatic-payment-methods/blik-alias.html",
    "searchKeys": [
      "blikAlias",
      "val blikAlias: BlikAlias? = null",
      "com.tpay.sdk.api.models.AutomaticPaymentMethods.blikAlias"
    ]
  },
  {
    "name": "val blikChannel: PaymentChannel?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.blikChannel",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/blik-channel.html",
    "searchKeys": [
      "blikChannel",
      "val blikChannel: PaymentChannel?",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.blikChannel"
    ]
  },
  {
    "name": "val blikMethod: ChannelMethod?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.blikMethod",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/blik-method.html",
    "searchKeys": [
      "blikMethod",
      "val blikMethod: ChannelMethod?",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.blikMethod"
    ]
  },
  {
    "name": "val brand: CreditCardBrand",
    "description": "com.tpay.sdk.api.models.TokenizedCard.brand",
    "location": "sdk/com.tpay.sdk.api.models/-tokenized-card/brand.html",
    "searchKeys": [
      "brand",
      "val brand: CreditCardBrand",
      "com.tpay.sdk.api.models.TokenizedCard.brand"
    ]
  },
  {
    "name": "val cardNetwork: String",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.cardNetwork",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/-success/card-network.html",
    "searchKeys": [
      "cardNetwork",
      "val cardNetwork: String",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.cardNetwork"
    ]
  },
  {
    "name": "val cardNumber: String",
    "description": "com.tpay.sdk.api.screenless.card.CreditCard.cardNumber",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card/card-number.html",
    "searchKeys": [
      "cardNumber",
      "val cardNumber: String",
      "com.tpay.sdk.api.screenless.card.CreditCard.cardNumber"
    ]
  },
  {
    "name": "val cardTail: String",
    "description": "com.tpay.sdk.api.models.TokenizedCard.cardTail",
    "location": "sdk/com.tpay.sdk.api.models/-tokenized-card/card-tail.html",
    "searchKeys": [
      "cardTail",
      "val cardTail: String",
      "com.tpay.sdk.api.models.TokenizedCard.cardTail"
    ]
  },
  {
    "name": "val cardTail: String",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.cardTail",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/-success/card-tail.html",
    "searchKeys": [
      "cardTail",
      "val cardTail: String",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.cardTail"
    ]
  },
  {
    "name": "val cardToken: String",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.cardToken",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-transaction/card-token.html",
    "searchKeys": [
      "cardToken",
      "val cardToken: String",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.cardToken"
    ]
  },
  {
    "name": "val channelId: Int",
    "description": "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod.channelId",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-channel-method/channel-id.html",
    "searchKeys": [
      "channelId",
      "val channelId: Int",
      "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod.channelId"
    ]
  },
  {
    "name": "val channels: List<PaymentChannel>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success.channels",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/-success/channels.html",
    "searchKeys": [
      "channels",
      "val channels: List<PaymentChannel>",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success.channels"
    ]
  },
  {
    "name": "val channels: List<PaymentChannel>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.InstallmentPaymentKind.channels",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-installment-payment-kind/channels.html",
    "searchKeys": [
      "channels",
      "val channels: List<PaymentChannel>",
      "com.tpay.sdk.api.screenless.channelMethods.InstallmentPaymentKind.channels"
    ]
  },
  {
    "name": "val clientId: String",
    "description": "com.tpay.sdk.api.models.merchant.Merchant.Authorization.clientId",
    "location": "sdk/com.tpay.sdk.api.models.merchant/-merchant/-authorization/client-id.html",
    "searchKeys": [
      "clientId",
      "val clientId: String",
      "com.tpay.sdk.api.models.merchant.Merchant.Authorization.clientId"
    ]
  },
  {
    "name": "val clientSecret: String",
    "description": "com.tpay.sdk.api.models.merchant.Merchant.Authorization.clientSecret",
    "location": "sdk/com.tpay.sdk.api.models.merchant/-merchant/-authorization/client-secret.html",
    "searchKeys": [
      "clientSecret",
      "val clientSecret: String",
      "com.tpay.sdk.api.models.merchant.Merchant.Authorization.clientSecret"
    ]
  },
  {
    "name": "val code: String",
    "description": "com.tpay.sdk.api.screenless.blik.AmbiguousAlias.code",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-ambiguous-alias/code.html",
    "searchKeys": [
      "code",
      "val code: String",
      "com.tpay.sdk.api.screenless.blik.AmbiguousAlias.code"
    ]
  },
  {
    "name": "val code: String",
    "description": "com.tpay.sdk.server.dto.parts.AmbiguousBlikAliasDTO.code",
    "location": "sdk/com.tpay.sdk.server.dto.parts/-ambiguous-blik-alias-d-t-o/code.html",
    "searchKeys": [
      "code",
      "val code: String",
      "com.tpay.sdk.server.dto.parts.AmbiguousBlikAliasDTO.code"
    ]
  },
  {
    "name": "val constraints: List<PaymentConstraint>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.constraints",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/constraints.html",
    "searchKeys": [
      "constraints",
      "val constraints: List<PaymentConstraint>",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.constraints"
    ]
  },
  {
    "name": "val creditCardChannel: PaymentChannel?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.creditCardChannel",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/credit-card-channel.html",
    "searchKeys": [
      "creditCardChannel",
      "val creditCardChannel: PaymentChannel?",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.creditCardChannel"
    ]
  },
  {
    "name": "val creditCardMethod: ChannelMethod?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.creditCardMethod",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/credit-card-method.html",
    "searchKeys": [
      "creditCardMethod",
      "val creditCardMethod: ChannelMethod?",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.creditCardMethod"
    ]
  },
  {
    "name": "val currency: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success.currency",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/-success/currency.html",
    "searchKeys": [
      "currency",
      "val currency: String",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success.currency"
    ]
  },
  {
    "name": "val cvv: String",
    "description": "com.tpay.sdk.api.screenless.card.CreditCard.cvv",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card/cvv.html",
    "searchKeys": [
      "cvv",
      "val cvv: String",
      "com.tpay.sdk.api.screenless.card.CreditCard.cvv"
    ]
  },
  {
    "name": "val delayMillis: Long",
    "description": "com.tpay.sdk.api.screenless.LongPollingConfig.delayMillis",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling-config/delay-millis.html",
    "searchKeys": [
      "delayMillis",
      "val delayMillis: Long",
      "com.tpay.sdk.api.screenless.LongPollingConfig.delayMillis"
    ]
  },
  {
    "name": "val description: String",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.description",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-transaction/description.html",
    "searchKeys": [
      "description",
      "val description: String",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.description"
    ]
  },
  {
    "name": "val description: String",
    "description": "com.tpay.sdk.api.screenless.PaymentDetails.description",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-details/description.html",
    "searchKeys": [
      "description",
      "val description: String",
      "com.tpay.sdk.api.screenless.PaymentDetails.description"
    ]
  },
  {
    "name": "val description: String",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.description",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/-success/description.html",
    "searchKeys": [
      "description",
      "val description: String",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.description"
    ]
  },
  {
    "name": "val devErrorMessage: String?",
    "description": "com.tpay.sdk.api.models.SheetOpenResult.UnexpectedError.devErrorMessage",
    "location": "sdk/com.tpay.sdk.api.models/-sheet-open-result/-unexpected-error/dev-error-message.html",
    "searchKeys": [
      "devErrorMessage",
      "val devErrorMessage: String?",
      "com.tpay.sdk.api.models.SheetOpenResult.UnexpectedError.devErrorMessage"
    ]
  },
  {
    "name": "val devErrorMessage: String?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Error.devErrorMessage",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/-error/dev-error-message.html",
    "searchKeys": [
      "devErrorMessage",
      "val devErrorMessage: String?",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Error.devErrorMessage"
    ]
  },
  {
    "name": "val devErrorMessage: String?",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Error.devErrorMessage",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/-error/dev-error-message.html",
    "searchKeys": [
      "devErrorMessage",
      "val devErrorMessage: String?",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Error.devErrorMessage"
    ]
  },
  {
    "name": "val devErrorMessage: String?",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Error.devErrorMessage",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/-error/dev-error-message.html",
    "searchKeys": [
      "devErrorMessage",
      "val devErrorMessage: String?",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Error.devErrorMessage"
    ]
  },
  {
    "name": "val devMessage: String",
    "description": "com.tpay.sdk.api.models.SheetOpenResult.ConfigurationInvalid.devMessage",
    "location": "sdk/com.tpay.sdk.api.models/-sheet-open-result/-configuration-invalid/dev-message.html",
    "searchKeys": [
      "devMessage",
      "val devMessage: String",
      "com.tpay.sdk.api.models.SheetOpenResult.ConfigurationInvalid.devMessage"
    ]
  },
  {
    "name": "val devMessage: String",
    "description": "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.devMessage",
    "location": "sdk/com.tpay.sdk.api.models.moduleError/-module-error/-configuration-error/dev-message.html",
    "searchKeys": [
      "devMessage",
      "val devMessage: String",
      "com.tpay.sdk.api.models.moduleError.ModuleError.ConfigurationError.devMessage"
    ]
  },
  {
    "name": "val error: ModuleError.ConfigurationError",
    "description": "com.tpay.sdk.api.models.ConfigurationCheckResult.Invalid.error",
    "location": "sdk/com.tpay.sdk.api.models/-configuration-check-result/-invalid/error.html",
    "searchKeys": [
      "error",
      "val error: ModuleError.ConfigurationError",
      "com.tpay.sdk.api.models.ConfigurationCheckResult.Invalid.error"
    ]
  },
  {
    "name": "val errorMessage: String?",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.ConfiguredPaymentFailed.errorMessage",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-configured-payment-failed/error-message.html",
    "searchKeys": [
      "errorMessage",
      "val errorMessage: String?",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.ConfiguredPaymentFailed.errorMessage"
    ]
  },
  {
    "name": "val errorMessage: String?",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Error.errorMessage",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-error/error-message.html",
    "searchKeys": [
      "errorMessage",
      "val errorMessage: String?",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Error.errorMessage"
    ]
  },
  {
    "name": "val errorMessage: String?",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Error.errorMessage",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-error/error-message.html",
    "searchKeys": [
      "errorMessage",
      "val errorMessage: String?",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Error.errorMessage"
    ]
  },
  {
    "name": "val errorMessage: String?",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Error.errorMessage",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-error/error-message.html",
    "searchKeys": [
      "errorMessage",
      "val errorMessage: String?",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Error.errorMessage"
    ]
  },
  {
    "name": "val errorMessage: String?",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Error.errorMessage",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/-error/error-message.html",
    "searchKeys": [
      "errorMessage",
      "val errorMessage: String?",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Error.errorMessage"
    ]
  },
  {
    "name": "val errorUrl: String",
    "description": "com.tpay.sdk.api.screenless.Redirects.errorUrl",
    "location": "sdk/com.tpay.sdk.api.screenless/-redirects/error-url.html",
    "searchKeys": [
      "errorUrl",
      "val errorUrl: String",
      "com.tpay.sdk.api.screenless.Redirects.errorUrl"
    ]
  },
  {
    "name": "val errorUrl: String",
    "description": "com.tpay.sdk.api.webView.WebViewConfiguration.errorUrl",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-configuration/error-url.html",
    "searchKeys": [
      "errorUrl",
      "val errorUrl: String",
      "com.tpay.sdk.api.webView.WebViewConfiguration.errorUrl"
    ]
  },
  {
    "name": "val expirationDate: Date",
    "description": "com.tpay.sdk.api.screenless.card.Recursive.expirationDate",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-recursive/expiration-date.html",
    "searchKeys": [
      "expirationDate",
      "val expirationDate: Date",
      "com.tpay.sdk.api.screenless.card.Recursive.expirationDate"
    ]
  },
  {
    "name": "val expirationDate: String",
    "description": "com.tpay.sdk.api.screenless.card.CreditCard.expirationDate",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-credit-card/expiration-date.html",
    "searchKeys": [
      "expirationDate",
      "val expirationDate: String",
      "com.tpay.sdk.api.screenless.card.CreditCard.expirationDate"
    ]
  },
  {
    "name": "val frequency: Frequency",
    "description": "com.tpay.sdk.api.screenless.card.Recursive.frequency",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-recursive/frequency.html",
    "searchKeys": [
      "frequency",
      "val frequency: Frequency",
      "com.tpay.sdk.api.screenless.card.Recursive.frequency"
    ]
  },
  {
    "name": "val groups: List<PaymentGroup>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.groups",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/groups.html",
    "searchKeys": [
      "groups",
      "val groups: List<PaymentGroup>",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.groups"
    ]
  },
  {
    "name": "val hiddenDescription: String? = null",
    "description": "com.tpay.sdk.api.screenless.PaymentDetails.hiddenDescription",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-details/hidden-description.html",
    "searchKeys": [
      "hiddenDescription",
      "val hiddenDescription: String? = null",
      "com.tpay.sdk.api.screenless.PaymentDetails.hiddenDescription"
    ]
  },
  {
    "name": "val id: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.id",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/id.html",
    "searchKeys": [
      "id",
      "val id: String",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.id"
    ]
  },
  {
    "name": "val id: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup.id",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-group/id.html",
    "searchKeys": [
      "id",
      "val id: String",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup.id"
    ]
  },
  {
    "name": "val imageUrl: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod.imageUrl",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-channel-method/image-url.html",
    "searchKeys": [
      "imageUrl",
      "val imageUrl: String",
      "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod.imageUrl"
    ]
  },
  {
    "name": "val imageUrl: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.imageUrl",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/image-url.html",
    "searchKeys": [
      "imageUrl",
      "val imageUrl: String",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.imageUrl"
    ]
  },
  {
    "name": "val imageUrl: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup.imageUrl",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-group/image-url.html",
    "searchKeys": [
      "imageUrl",
      "val imageUrl: String",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup.imageUrl"
    ]
  },
  {
    "name": "val installmentPayment: InstallmentPayment",
    "description": "com.tpay.sdk.api.screenless.channelMethods.InstallmentPaymentKind.installmentPayment",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-installment-payment-kind/installment-payment.html",
    "searchKeys": [
      "installmentPayment",
      "val installmentPayment: InstallmentPayment",
      "com.tpay.sdk.api.screenless.channelMethods.InstallmentPaymentKind.installmentPayment"
    ]
  },
  {
    "name": "val installmentPayments: List<InstallmentPaymentKind>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.installmentPayments",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/installment-payments.html",
    "searchKeys": [
      "installmentPayments",
      "val installmentPayments: List<InstallmentPaymentKind>",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.installmentPayments"
    ]
  },
  {
    "name": "val isAvailable: Boolean",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.isAvailable",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/is-available.html",
    "searchKeys": [
      "isAvailable",
      "val isAvailable: Boolean",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.isAvailable"
    ]
  },
  {
    "name": "val isInstantRedirectionAvailable: Boolean",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.isInstantRedirectionAvailable",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/is-instant-redirection-available.html",
    "searchKeys": [
      "isInstantRedirectionAvailable",
      "val isInstantRedirectionAvailable: Boolean",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.isInstantRedirectionAvailable"
    ]
  },
  {
    "name": "val isOnline: Boolean",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.isOnline",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/is-online.html",
    "searchKeys": [
      "isOnline",
      "val isOnline: Boolean",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.isOnline"
    ]
  },
  {
    "name": "val isValid: Boolean",
    "description": "com.tpay.sdk.server.AccessToken.isValid",
    "location": "sdk/com.tpay.sdk.server/-access-token/is-valid.html",
    "searchKeys": [
      "isValid",
      "val isValid: Boolean",
      "com.tpay.sdk.server.AccessToken.isValid"
    ]
  },
  {
    "name": "val language: Language? = null",
    "description": "com.tpay.sdk.api.screenless.PaymentDetails.language",
    "location": "sdk/com.tpay.sdk.api.screenless/-payment-details/language.html",
    "searchKeys": [
      "language",
      "val language: Language? = null",
      "com.tpay.sdk.api.screenless.PaymentDetails.language"
    ]
  },
  {
    "name": "val language: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success.language",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-get-payment-channels-result/-success/language.html",
    "searchKeys": [
      "language",
      "val language: String",
      "com.tpay.sdk.api.screenless.channelMethods.GetPaymentChannelsResult.Success.language"
    ]
  },
  {
    "name": "val maxRequestCount: Int? = null",
    "description": "com.tpay.sdk.api.screenless.LongPollingConfig.maxRequestCount",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling-config/max-request-count.html",
    "searchKeys": [
      "maxRequestCount",
      "val maxRequestCount: Int? = null",
      "com.tpay.sdk.api.screenless.LongPollingConfig.maxRequestCount"
    ]
  },
  {
    "name": "val maximum: Double?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount.maximum",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-constraint/-amount/maximum.html",
    "searchKeys": [
      "maximum",
      "val maximum: Double?",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount.maximum"
    ]
  },
  {
    "name": "val merchantId: String",
    "description": "com.tpay.sdk.api.models.GooglePayConfiguration.merchantId",
    "location": "sdk/com.tpay.sdk.api.models/-google-pay-configuration/merchant-id.html",
    "searchKeys": [
      "merchantId",
      "val merchantId: String",
      "com.tpay.sdk.api.models.GooglePayConfiguration.merchantId"
    ]
  },
  {
    "name": "val message: String",
    "description": "com.tpay.sdk.api.webView.WebViewCheckResult.Invalid.message",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-check-result/-invalid/message.html",
    "searchKeys": [
      "message",
      "val message: String",
      "com.tpay.sdk.api.webView.WebViewCheckResult.Invalid.message"
    ]
  },
  {
    "name": "val method: ChannelMethod",
    "description": "com.tpay.sdk.api.screenless.channelMethods.WalletMethod.method",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-wallet-method/method.html",
    "searchKeys": [
      "method",
      "val method: ChannelMethod",
      "com.tpay.sdk.api.screenless.channelMethods.WalletMethod.method"
    ]
  },
  {
    "name": "val methods: List<InstallmentPayment>",
    "description": "com.tpay.sdk.api.models.PaymentMethod.InstallmentPayments.methods",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-installment-payments/methods.html",
    "searchKeys": [
      "methods",
      "val methods: List<InstallmentPayment>",
      "com.tpay.sdk.api.models.PaymentMethod.InstallmentPayments.methods"
    ]
  },
  {
    "name": "val minimum: Double?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount.minimum",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-constraint/-amount/minimum.html",
    "searchKeys": [
      "minimum",
      "val minimum: Double?",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentConstraint.Amount.minimum"
    ]
  },
  {
    "name": "val name: String",
    "description": "com.tpay.sdk.api.screenless.blik.AmbiguousAlias.name",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-ambiguous-alias/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "com.tpay.sdk.api.screenless.blik.AmbiguousAlias.name"
    ]
  },
  {
    "name": "val name: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod.name",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-channel-method/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "com.tpay.sdk.api.screenless.channelMethods.ChannelMethod.name"
    ]
  },
  {
    "name": "val name: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.name",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-channel/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentChannel.name"
    ]
  },
  {
    "name": "val name: String",
    "description": "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup.name",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-payment-group/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "com.tpay.sdk.api.screenless.channelMethods.PaymentGroup.name"
    ]
  },
  {
    "name": "val name: String",
    "description": "com.tpay.sdk.server.dto.parts.AmbiguousBlikAliasDTO.name",
    "location": "sdk/com.tpay.sdk.server.dto.parts/-ambiguous-blik-alias-d-t-o/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "com.tpay.sdk.server.dto.parts.AmbiguousBlikAliasDTO.name"
    ]
  },
  {
    "name": "val notificationEmail: String",
    "description": "com.tpay.sdk.api.screenless.Notifications.notificationEmail",
    "location": "sdk/com.tpay.sdk.api.screenless/-notifications/notification-email.html",
    "searchKeys": [
      "notificationEmail",
      "val notificationEmail: String",
      "com.tpay.sdk.api.screenless.Notifications.notificationEmail"
    ]
  },
  {
    "name": "val notificationUrl: String",
    "description": "com.tpay.sdk.api.addCard.Tokenization.notificationUrl",
    "location": "sdk/com.tpay.sdk.api.addCard/-tokenization/notification-url.html",
    "searchKeys": [
      "notificationUrl",
      "val notificationUrl: String",
      "com.tpay.sdk.api.addCard.Tokenization.notificationUrl"
    ]
  },
  {
    "name": "val notificationUrl: String",
    "description": "com.tpay.sdk.api.screenless.Notifications.notificationUrl",
    "location": "sdk/com.tpay.sdk.api.screenless/-notifications/notification-url.html",
    "searchKeys": [
      "notificationUrl",
      "val notificationUrl: String",
      "com.tpay.sdk.api.screenless.Notifications.notificationUrl"
    ]
  },
  {
    "name": "val notifications: Notifications?",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.notifications",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-transaction/notifications.html",
    "searchKeys": [
      "notifications",
      "val notifications: Notifications?",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.notifications"
    ]
  },
  {
    "name": "val onMaxRequestCount: () -> Unit",
    "description": "com.tpay.sdk.api.screenless.LongPollingConfig.onMaxRequestCount",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling-config/on-max-request-count.html",
    "searchKeys": [
      "onMaxRequestCount",
      "val onMaxRequestCount: () -> Unit",
      "com.tpay.sdk.api.screenless.LongPollingConfig.onMaxRequestCount"
    ]
  },
  {
    "name": "val onRequestError: (Exception) -> Unit",
    "description": "com.tpay.sdk.api.screenless.LongPollingConfig.onRequestError",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling-config/on-request-error.html",
    "searchKeys": [
      "onRequestError",
      "val onRequestError: (Exception) -> Unit",
      "com.tpay.sdk.api.screenless.LongPollingConfig.onRequestError"
    ]
  },
  {
    "name": "val onTransactionState: (TransactionState) -> Unit",
    "description": "com.tpay.sdk.api.screenless.LongPollingConfig.onTransactionState",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling-config/on-transaction-state.html",
    "searchKeys": [
      "onTransactionState",
      "val onTransactionState: (TransactionState) -> Unit",
      "com.tpay.sdk.api.screenless.LongPollingConfig.onTransactionState"
    ]
  },
  {
    "name": "val payPoMethod: ChannelMethod?",
    "description": "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.payPoMethod",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-available-payment-methods/pay-po-method.html",
    "searchKeys": [
      "payPoMethod",
      "val payPoMethod: ChannelMethod?",
      "com.tpay.sdk.api.screenless.channelMethods.AvailablePaymentMethods.payPoMethod"
    ]
  },
  {
    "name": "val payer: Payer",
    "description": "com.tpay.sdk.api.addCard.Tokenization.payer",
    "location": "sdk/com.tpay.sdk.api.addCard/-tokenization/payer.html",
    "searchKeys": [
      "payer",
      "val payer: Payer",
      "com.tpay.sdk.api.addCard.Tokenization.payer"
    ]
  },
  {
    "name": "val payer: Payer",
    "description": "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.payer",
    "location": "sdk/com.tpay.sdk.api.cardTokenPayment/-card-token-transaction/payer.html",
    "searchKeys": [
      "payer",
      "val payer: Payer",
      "com.tpay.sdk.api.cardTokenPayment.CardTokenTransaction.payer"
    ]
  },
  {
    "name": "val payer: Payer",
    "description": "com.tpay.sdk.api.models.PayerContext.payer",
    "location": "sdk/com.tpay.sdk.api.models/-payer-context/payer.html",
    "searchKeys": [
      "payer",
      "val payer: Payer",
      "com.tpay.sdk.api.models.PayerContext.payer"
    ]
  },
  {
    "name": "val paymentUrl: String",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Created.paymentUrl",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-created/payment-url.html",
    "searchKeys": [
      "paymentUrl",
      "val paymentUrl: String",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Created.paymentUrl"
    ]
  },
  {
    "name": "val paymentUrl: String",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Created.paymentUrl",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-created/payment-url.html",
    "searchKeys": [
      "paymentUrl",
      "val paymentUrl: String",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Created.paymentUrl"
    ]
  },
  {
    "name": "val paymentUrl: String",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Created.paymentUrl",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/-created/payment-url.html",
    "searchKeys": [
      "paymentUrl",
      "val paymentUrl: String",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Created.paymentUrl"
    ]
  },
  {
    "name": "val paymentUrl: String",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Created.paymentUrl",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/-created/payment-url.html",
    "searchKeys": [
      "paymentUrl",
      "val paymentUrl: String",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Created.paymentUrl"
    ]
  },
  {
    "name": "val paymentUrl: String",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Created.paymentUrl",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/-created/payment-url.html",
    "searchKeys": [
      "paymentUrl",
      "val paymentUrl: String",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Created.paymentUrl"
    ]
  },
  {
    "name": "val paymentUrl: String",
    "description": "com.tpay.sdk.api.webView.WebViewConfiguration.paymentUrl",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-configuration/payment-url.html",
    "searchKeys": [
      "paymentUrl",
      "val paymentUrl: String",
      "com.tpay.sdk.api.webView.WebViewConfiguration.paymentUrl"
    ]
  },
  {
    "name": "val publicKeyHash: String",
    "description": "com.tpay.sdk.api.models.CertificatePinningConfiguration.publicKeyHash",
    "location": "sdk/com.tpay.sdk.api.models/-certificate-pinning-configuration/public-key-hash.html",
    "searchKeys": [
      "publicKeyHash",
      "val publicKeyHash: String",
      "com.tpay.sdk.api.models.CertificatePinningConfiguration.publicKeyHash"
    ]
  },
  {
    "name": "val quantity: Quantity",
    "description": "com.tpay.sdk.api.screenless.card.Recursive.quantity",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-recursive/quantity.html",
    "searchKeys": [
      "quantity",
      "val quantity: Quantity",
      "com.tpay.sdk.api.screenless.card.Recursive.quantity"
    ]
  },
  {
    "name": "val stopOnFirstRequestError: Boolean = false",
    "description": "com.tpay.sdk.api.screenless.LongPollingConfig.stopOnFirstRequestError",
    "location": "sdk/com.tpay.sdk.api.screenless/-long-polling-config/stop-on-first-request-error.html",
    "searchKeys": [
      "stopOnFirstRequestError",
      "val stopOnFirstRequestError: Boolean = false",
      "com.tpay.sdk.api.screenless.LongPollingConfig.stopOnFirstRequestError"
    ]
  },
  {
    "name": "val successUrl: String",
    "description": "com.tpay.sdk.api.screenless.Redirects.successUrl",
    "location": "sdk/com.tpay.sdk.api.screenless/-redirects/success-url.html",
    "searchKeys": [
      "successUrl",
      "val successUrl: String",
      "com.tpay.sdk.api.screenless.Redirects.successUrl"
    ]
  },
  {
    "name": "val successUrl: String",
    "description": "com.tpay.sdk.api.webView.WebViewConfiguration.successUrl",
    "location": "sdk/com.tpay.sdk.api.webView/-web-view-configuration/success-url.html",
    "searchKeys": [
      "successUrl",
      "val successUrl: String",
      "com.tpay.sdk.api.webView.WebViewConfiguration.successUrl"
    ]
  },
  {
    "name": "val token: String",
    "description": "com.tpay.sdk.api.models.TokenizedCard.token",
    "location": "sdk/com.tpay.sdk.api.models/-tokenized-card/token.html",
    "searchKeys": [
      "token",
      "val token: String",
      "com.tpay.sdk.api.models.TokenizedCard.token"
    ]
  },
  {
    "name": "val token: String",
    "description": "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.token",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-open-google-pay-result/-success/token.html",
    "searchKeys": [
      "token",
      "val token: String",
      "com.tpay.sdk.api.screenless.googlePay.OpenGooglePayResult.Success.token"
    ]
  },
  {
    "name": "val token: String",
    "description": "com.tpay.sdk.server.AccessToken.token",
    "location": "sdk/com.tpay.sdk.server/-access-token/token.html",
    "searchKeys": [
      "token",
      "val token: String",
      "com.tpay.sdk.server.AccessToken.token"
    ]
  },
  {
    "name": "val tokenizedCards: List<TokenizedCard>",
    "description": "com.tpay.sdk.api.models.AutomaticPaymentMethods.tokenizedCards",
    "location": "sdk/com.tpay.sdk.api.models/-automatic-payment-methods/tokenized-cards.html",
    "searchKeys": [
      "tokenizedCards",
      "val tokenizedCards: List<TokenizedCard>",
      "com.tpay.sdk.api.models.AutomaticPaymentMethods.tokenizedCards"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.AmbiguousBlikAlias.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-ambiguous-blik-alias/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.AmbiguousBlikAlias.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.ConfiguredPaymentFailed.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-configured-payment-failed/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.ConfiguredPaymentFailed.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Created.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-created/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Created.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.CreatedAndPaid.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-created-and-paid/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.CreatedAndPaid.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Created.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-created/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Created.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.CreatedAndPaid.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-created-and-paid/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.CreatedAndPaid.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Created.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-created/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Created.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.CreatedAndPaid.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-created-and-paid/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.CreatedAndPaid.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Created.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/-created/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Created.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Created.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/-created/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Created.transactionId"
    ]
  },
  {
    "name": "val transactionId: String",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Created.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/-created/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Created.transactionId"
    ]
  },
  {
    "name": "val transactionId: String? = null",
    "description": "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Error.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.blik/-create-b-l-i-k-transaction-result/-error/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String? = null",
      "com.tpay.sdk.api.screenless.blik.CreateBLIKTransactionResult.Error.transactionId"
    ]
  },
  {
    "name": "val transactionId: String? = null",
    "description": "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Error.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.card/-create-credit-card-transaction-result/-error/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String? = null",
      "com.tpay.sdk.api.screenless.card.CreateCreditCardTransactionResult.Error.transactionId"
    ]
  },
  {
    "name": "val transactionId: String? = null",
    "description": "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Error.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.googlePay/-create-google-pay-transaction-result/-error/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String? = null",
      "com.tpay.sdk.api.screenless.googlePay.CreateGooglePayTransactionResult.Error.transactionId"
    ]
  },
  {
    "name": "val transactionId: String? = null",
    "description": "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Error.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.payPo/-create-pay-po-transaction-result/-error/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String? = null",
      "com.tpay.sdk.api.screenless.payPo.CreatePayPoTransactionResult.Error.transactionId"
    ]
  },
  {
    "name": "val transactionId: String? = null",
    "description": "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Error.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.pekaoInstallment/-create-pekao-installment-transaction-result/-error/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String? = null",
      "com.tpay.sdk.api.screenless.pekaoInstallment.CreatePekaoInstallmentTransactionResult.Error.transactionId"
    ]
  },
  {
    "name": "val transactionId: String? = null",
    "description": "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Error.transactionId",
    "location": "sdk/com.tpay.sdk.api.screenless.transfer/-create-transfer-transaction-result/-error/transaction-id.html",
    "searchKeys": [
      "transactionId",
      "val transactionId: String? = null",
      "com.tpay.sdk.api.screenless.transfer.CreateTransferTransactionResult.Error.transactionId"
    ]
  },
  {
    "name": "val transferChannels: List<PaymentChannel>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.transferChannels",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/transfer-channels.html",
    "searchKeys": [
      "transferChannels",
      "val transferChannels: List<PaymentChannel>",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.transferChannels"
    ]
  },
  {
    "name": "val url: String",
    "description": "com.tpay.sdk.server.dto.parts.ImageDTO.url",
    "location": "sdk/com.tpay.sdk.server.dto.parts/-image-d-t-o/url.html",
    "searchKeys": [
      "url",
      "val url: String",
      "com.tpay.sdk.server.dto.parts.ImageDTO.url"
    ]
  },
  {
    "name": "val validForSeconds: Int",
    "description": "com.tpay.sdk.server.AccessToken.validForSeconds",
    "location": "sdk/com.tpay.sdk.server/-access-token/valid-for-seconds.html",
    "searchKeys": [
      "validForSeconds",
      "val validForSeconds: Int",
      "com.tpay.sdk.server.AccessToken.validForSeconds"
    ]
  },
  {
    "name": "val value: Int",
    "description": "com.tpay.sdk.api.models.transaction.Quantity.Specified.value",
    "location": "sdk/com.tpay.sdk.api.models.transaction/-quantity/-specified/value.html",
    "searchKeys": [
      "value",
      "val value: Int",
      "com.tpay.sdk.api.models.transaction.Quantity.Specified.value"
    ]
  },
  {
    "name": "val wallet: DigitalWallet",
    "description": "com.tpay.sdk.api.screenless.channelMethods.WalletMethod.wallet",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-wallet-method/wallet.html",
    "searchKeys": [
      "wallet",
      "val wallet: DigitalWallet",
      "com.tpay.sdk.api.screenless.channelMethods.WalletMethod.wallet"
    ]
  },
  {
    "name": "val walletChannels: List<PaymentChannel>",
    "description": "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.walletChannels",
    "location": "sdk/com.tpay.sdk.api.screenless.channelMethods/-grouped-payment-channels/wallet-channels.html",
    "searchKeys": [
      "walletChannels",
      "val walletChannels: List<PaymentChannel>",
      "com.tpay.sdk.api.screenless.channelMethods.GroupedPaymentChannels.walletChannels"
    ]
  },
  {
    "name": "val wallets: List<DigitalWallet>",
    "description": "com.tpay.sdk.api.models.PaymentMethod.DigitalWallets.wallets",
    "location": "sdk/com.tpay.sdk.api.models/-payment-method/-digital-wallets/wallets.html",
    "searchKeys": [
      "wallets",
      "val wallets: List<DigitalWallet>",
      "com.tpay.sdk.api.models.PaymentMethod.DigitalWallets.wallets"
    ]
  },
  {
    "name": "var address: Payer.Address?",
    "description": "com.tpay.sdk.api.models.payer.Payer.address",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/address.html",
    "searchKeys": [
      "address",
      "var address: Payer.Address?",
      "com.tpay.sdk.api.models.payer.Payer.address"
    ]
  },
  {
    "name": "var address: String?",
    "description": "com.tpay.sdk.api.models.payer.Payer.Address.address",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/-address/address.html",
    "searchKeys": [
      "address",
      "var address: String?",
      "com.tpay.sdk.api.models.payer.Payer.Address.address"
    ]
  },
  {
    "name": "var city: String?",
    "description": "com.tpay.sdk.api.models.payer.Payer.Address.city",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/-address/city.html",
    "searchKeys": [
      "city",
      "var city: String?",
      "com.tpay.sdk.api.models.payer.Payer.Address.city"
    ]
  },
  {
    "name": "var countryCode: String?",
    "description": "com.tpay.sdk.api.models.payer.Payer.Address.countryCode",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/-address/country-code.html",
    "searchKeys": [
      "countryCode",
      "var countryCode: String?",
      "com.tpay.sdk.api.models.payer.Payer.Address.countryCode"
    ]
  },
  {
    "name": "var email: String",
    "description": "com.tpay.sdk.api.models.payer.Payer.email",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/email.html",
    "searchKeys": [
      "email",
      "var email: String",
      "com.tpay.sdk.api.models.payer.Payer.email"
    ]
  },
  {
    "name": "var name: String",
    "description": "com.tpay.sdk.api.models.payer.Payer.name",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/name.html",
    "searchKeys": [
      "name",
      "var name: String",
      "com.tpay.sdk.api.models.payer.Payer.name"
    ]
  },
  {
    "name": "var phone: String?",
    "description": "com.tpay.sdk.api.models.payer.Payer.phone",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/phone.html",
    "searchKeys": [
      "phone",
      "var phone: String?",
      "com.tpay.sdk.api.models.payer.Payer.phone"
    ]
  },
  {
    "name": "var postalCode: String?",
    "description": "com.tpay.sdk.api.models.payer.Payer.Address.postalCode",
    "location": "sdk/com.tpay.sdk.api.models.payer/-payer/-address/postal-code.html",
    "searchKeys": [
      "postalCode",
      "var postalCode: String?",
      "com.tpay.sdk.api.models.payer.Payer.Address.postalCode"
    ]
  }
]
